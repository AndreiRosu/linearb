"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,r,t,n,i=require("js-yaml"),a=(e=require("ajv"))&&"object"==typeof e&&"default"in e?e.default:e;function o(e,r){e.prototype=Object.create(r.prototype),e.prototype.constructor=e,l(e,r)}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,r){return(l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,r){return e.__proto__=r,e})(e,r)}function u(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function p(e,r,t){return(p=u()?Reflect.construct.bind():function(e,r,t){var n=[null];n.push.apply(n,r);var i=new(Function.bind.apply(e,n));return t&&l(i,t.prototype),i}).apply(null,arguments)}function c(e){var r="function"==typeof Map?new Map:void 0;return(c=function(e){if(null===e||-1===Function.toString.call(e).indexOf("[native code]"))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(e))return r.get(e);r.set(e,t)}function t(){return p(e,arguments,s(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),l(t,e)})(e)}function d(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function f(e,r){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,r){if(e){if("string"==typeof e)return d(e,void 0);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?d(e,void 0):void 0}}(e))||r&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var E={COMMIT:"commit",PR_CREATED:"pr_created",COMMENT_ADDED:"comment_added",LABEL_ADDED:"label_added",LABEL_REMOVED:"label_removed"},v={EXPLAIN_CODE_EXPERTS:"explain-code-experts@v1",ADD_COMMENT:"add-comment@v1",ADD_LABEL:"add-label@v1",ADD_LABELS:"add-labels@v1",ADD_REVIEWERS:"add-reviewers@v1",APPROVE:"approve@v1",MERGE:"merge@v1",SET_REQUIRED_APPROVALS:"set-required-approvals@v1",REQUIRE_REVIEWER:"require-reviewers@v1",REQUEST_CHANGES:"request-changes@v1",UPDATE_CHECK:"update-check@v1",CLOSE:"close@v1",HTTP_REQUEST:"http-request@v1",INVOKE_GITHUB_ACTION:"invoke-github-action@v1"},_={default:v,gitlab:{ADD_COMMENT:"add-comment@v1",ADD_LABEL:"add-label@v1",ADD_LABELS:"add-labels@v1",ADD_REVIEWERS:"add-reviewers@v1",APPROVE:"approve@v1",MERGE:"merge@v1",CLOSE:"close@v1",EXPLAIN_CODE_EXPERTS:"explain-code-experts@v1"}},m=((r={})[v.EXPLAIN_CODE_EXPERTS]=["lt","gt"],r[v.ADD_COMMENT]=["comment","pin_uid"],r[v.ADD_LABEL]=["label","color"],r[v.ADD_LABELS]=["labels"],r[v.ADD_REVIEWERS]=["reviewers","team_reviewers","unless_reviewers_set","fail_on_error"],r[v.MERGE]=["wait_for_all_checks","rebase_on_merge","squash_on_merge"],r[v.SET_REQUIRED_APPROVALS]=["approvals"],r[v.REQUEST_CHANGES]=["comment"],r[v.REQUIRE_REVIEWER]=["reviewers","also_assign","team_reviewers","fail_on_error"],r[v.HTTP_REQUEST]=["url","method","user","body","timeout","headers"],r[v.INVOKE_GITHUB_ACTION]=["owner","repo","workflow","ref","inputs","check_name"],r[v.UPDATE_CHECK]=["check_name","status","conclusion"],r),y=((t={})[v.EXPLAIN_CODE_EXPERTS]={all:!1,args:["lt","gt"]},t[v.ADD_COMMENT]={all:!0,args:["comment"]},t[v.ADD_LABEL]={all:!0,args:["label"]},t[v.ADD_LABELS]={all:!0,args:["labels"]},t[v.ADD_REVIEWERS]={all:!1,args:["reviewers","team_reviewers"]},t[v.SET_REQUIRED_APPROVALS]={all:!0,args:["approvals"]},t[v.REQUEST_CHANGES]={all:!0,args:["comment"]},t[v.REQUIRE_REVIEWER]={all:!1,args:["reviewers","team_reviewers"]},t[v.HTTP_REQUEST]={all:!0,args:["url"]},t[v.INVOKE_GITHUB_ACTION]={all:!1,args:["owner","repo","workflow","ref"]},t[v.UPDATE_CHECK]={all:!0,args:["check_name","status","conclusion"]},t),g=["branch","branch.name","branch.base","branch.diff.size","branch.diff.files_metadata","branch.num_of_commits","files","pr","pr.approvals","pr.author","pr.author_teams","pr.checks","pr.comments","pr.conversations","pr.created_at","pr.draft","pr.description","pr.labels","pr.provider","pr.reviewers","pr.status","pr.target","pr.title","pr.requested_changes","pr.reviews","pr.updated_at","repo","repo.git_activity","repo.age","repo.author_age","repo.blame","repo.contributors","repo.name","repo.owner","source","source.diff.files"],b={every:["list"],filter:["list","regex","term"],includes:["list","regex","term"],map:["list","attr"],match:["list","regex","term","attr"],nope:[],reject:["list","regex","term"],some:["list"],allDocs:[],allImages:[],allTests:[],codeExperts:["gt","lt"],estimatedReviewTime:[],extensions:[],extractJitFindings:[],extractSonarFindings:[],explainCodeExperts:["gt","lt"],explainRankByGitBlame:["gt","lt"],isFirstCommit:[],isFormattingChange:[],mapToEnum:[],matchDiffLines:["regex","ignoreWhiteSpaces"],rankByGitActivity:["gt","lt"],rankByGitBlame:["gt","lt"],intersection:["list"],difference:["list"]},A=["abs","attr","batch","capitalize","center","default","dictsort","escape","filesizeformat","first","float","forceescape","format","groupby","indent","int","join","last","length","list","lower","map","max","min","pprint","random","reject","rejectattr","replace","reverse","round","safe","select","selectattr","slice","sort","split","string","striptags","sum","title","trim","truncate","unique","upper","urlencode","urlize","wordcount","wordwrap","xmlattr","nl2br","dump"],h=[1],R=((n={})[v.ADD_COMMENT]={comment:{type:"string",required:!0}},n[v.ADD_LABEL]={label:{type:"string",required:!0},color:{type:"string",required:!1}},n[v.ADD_LABELS]={labels:{type:"array",required:!0}},n[v.ADD_REVIEWERS]={reviewers:{type:"array",required:!0},team_reviewers:{type:"array",required:!1},unless_reviewers_set:{type:"boolean",required:!1},fail_on_error:{type:"boolean",required:!1}},n[v.APPROVE]={},n[v.CLOSE]={},n[v.MERGE]={wait_for_all_checks:{type:"boolean",required:!1},rebase_on_merge:{type:"boolean",required:!1},squash_on_merge:{type:"boolean",required:!1}},n[v.SET_REQUIRED_APPROVALS]={approvals:{type:"number",required:!0}},n[v.REQUEST_CHANGES]={comment:{type:"string",required:!0}},n[v.REQUIRE_REVIEWER]={reviewers:{type:"array",required:!0},also_assign:{type:"boolean",required:!1}},n[v.EXPLAIN_CODE_EXPERTS]={lt:{type:"number",required:!1},gt:{type:"number",required:!1}},n[v.INVOKE_GITHUB_ACTION]={owner:{type:"string",required:!0},repo:{type:"string",required:!0},workflow:{type:"string",required:!0},ref:{type:"string",required:!0},inputs:{type:"number",required:!1},check_name:{type:"string",required:!1}},n),S={type:"object",properties:{manifest:{type:"object",properties:{version:{type:"number",enum:h}},required:["version"]},config:{type:"object",properties:{ignore_files:{type:"array",items:{type:"string"}},ignore_repositories:{type:"array",items:{type:"string"}},admin:{type:"object",properties:{users:{type:"array",items:{type:"string"}}}}}},on:{type:"array",items:{type:"string",enum:Object.values(E)}},automations:{type:"object",patternProperties:{"^[a-zA-Z0-9_@]+$":{type:"object",properties:{on:{type:"array",items:{type:"string",enum:Object.values(E)}},if:{type:"array"},run:{type:"array",items:{type:"object",properties:{action:{type:"string",enum:Object.keys(R)},args:{type:"object"}},required:["action"]}}},required:["if","run"]}}}},required:["manifest","automations"]},O=/{{.*?}}/g,D=/\/(.*?)\//g,T={__proto__:null,SUPPORTED_TRIGGERS:E,SUPPORTED_ACTIONS:v,SUPPORTED_ACTIONS_BY_PROVIDER:_,SUPPORTED_ARGUMENTS_BY_ACTION:m,REQUIRED_ARGUMENTS_BY_ACTIONS:y,VALID_CONTEXT_VARS:g,VALID_FILTERS:b,JINJA_FILTERS:A,VALID_VERSIONS:h,VALID_ACTIONS:R,CM_SCHEMA:S,JINJA_EXPRESSION_REGEX:O,REGEX_EXPRESSION:D},w=function(){function e(){}return e.prototype.validate=function(e){throw new Error('Abstract method "validate" must be implemented.')},e.parseJinjaExpressions=function(e){var r=e.split("\n"),t=[];return r.forEach((function(e,r){var n=e.match(O);n&&n.forEach((function(e){t.push({expression:e,lineNumber:r+1})}))})),t},e}(),I=function(e){function r(r){var t;return(t=e.call(this,r)||this).name="ValidationError",t}return o(r,e),r}(c(Error)),x=function(e){function r(){return e.apply(this,arguments)||this}o(r,e);var t=r.prototype;return t.isValidCustomVariables=function(e,r){return e.split(".").slice(0,-1).map((function(e){return e.replace(/[()]/g,"")})).every((function(e){return r.includes(e+":")}))},t.isValidContextVariable=function(e){return!!g.includes(e||"UNKNOWN_CONTEXT")},t.validate=function(e){var r=this,t=e.expressions,n=e.yamlFile;(null!=t?t:w.parseJinjaExpressions(n)).forEach((function(e){var t,i,a,o=e.expression,s=e.lineNumber,l=null!=(t=null==(i=o.replace(/[{}]/g,"").split("|").shift())?void 0:i.trim())?t:"UNKNOWN_CONTEXT";(null!=(a=null==l?void 0:l.split(" "))?a:[]).forEach((function(e){if(!r.isValidContextVariable(e)&&!r.isValidCustomVariables(e,n))throw new I("Line ["+s+"]: Invalid context variable "+e+" in expression "+o)}))}))},r}(w),C=function(e){function r(){return e.apply(this,arguments)||this}o(r,e);var t=r.prototype;return t.validateExistingFilter=function(e,r,t){if(!A.includes(e)&&!g.includes(e)&&!Object.keys(b).includes(e))throw new I("Line "+r+": Invalid filter function "+e+" in expression "+t)},t.getFilterArgs=function(e){return e.slice(e.indexOf("(")+1,e.lastIndexOf(")")).replace(D,"").split(",").map((function(e){return e.split("=")[0].trim()}))},t.validateFilterArgs=function(e,r,t,n){if(e.includes("("))for(var i,a=this.getFilterArgs(e),o=b[r],s=f(a);!(i=s()).done;){var l=i.value;if(!o.includes(l))throw new I("Line ["+t+"]: Invalid argument "+l+" for filter "+r+" in expression "+n)}},t.validate=function(e){var r=this,t=e.expressions;(null!=t?t:w.parseJinjaExpressions(e.yamlFile)).forEach((function(e){for(var t,n,i=e.expression,a=e.lineNumber,o=f(null!=(t=i.replace(D,"").replace(/[{}]/g,"").split("|").slice(1))?t:[]);!(n=o()).done;){var s=n.value.split(/\s*==\s*|\s*<\s*|\s*>\s*/)[0],l=s.split("(")[0].trim();r.validateExistingFilter(l,a,i),r.validateFilterArgs(s,l,a,i)}}))},r}(w),P=function(e){function r(){return e.apply(this,arguments)||this}o(r,e);var t=r.prototype;return t.validateActionSupported=function(e){if(!Object.values(v).includes(e))throw new I("Action is not supported "+e)},t.validateArgSupported=function(e,r){var t=null==r?void 0:r.filter((function(r){return!m[e].includes(r)}));if(t.length)throw new I("Some args are not supported:  "+t.join(", "))},t.validateRequiredArgs=function(e,r){var t,n=y[e];if(n){var i=null==(t=n.args)?void 0:t.filter((function(e){return!r.includes(e)}));if(n.all&&i.length||!n.all&&!n.args.some((function(e){return r.includes(e)})))throw new I("Some required args are missing for action "+e+": "+i.join(", "))}},t.validate=function(e){for(var r,t,n=e.yamlFile.replace(O,"TEMPLATE"),a=i.load(n),o=f(null==(r=Object.values(a.automations).flatMap((function(e){return e.run})))?void 0:r.filter(Boolean));!(t=o()).done;){var s=t.value,l=s.action,u=s.args,p=Object.keys(null!=u?u:{});this.validateActionSupported(l),p.length&&this.validateArgSupported(l,p),this.validateRequiredArgs(l,p)}},r}(w),L=new a,N=function(e){function r(){return e.apply(this,arguments)||this}return o(r,e),r.prototype.validate=function(e){for(var r,t=i.loadAll(e.yamlFile.replace(O,""),void 0,{schema:i.JSON_SCHEMA}),n=L.compile(S),a=f(t);!(r=a()).done;){var o;if(!n(r.value))throw new I("Schema is not valid: "+(null==(o=n.errors)?void 0:o.map((function(e){return e.message})).join(", ")))}},r}(w),j=function(e){function r(){return e.apply(this,arguments)||this}return o(r,e),r.prototype.validate=function(e){var r=i.load(e.yamlFile.replace(O,"").replace(/{%.*?%}[\s\S]*?{% endfor %}/g,"")),t=Object.keys(r).filter((function(e){return!Object.keys(S.properties).includes(e)})).find((function(e){return g.includes(e)}));if(t)throw new I("Invalid custom context variable: `"+t+"` is a built-in context")},r}(w),V=function(e){function r(){return e.apply(this,arguments)||this}o(r,e);var t=r.prototype;return t.validateSuppertedTriggers=function(e){if(!Object.values(E).includes(e))throw new I(e+" trigger is not supported")},t.validate=function(e){for(var r,t=e.yamlFile.replace(O,"TEMPLATE"),n=i.load(t),a=n.automations.on||[],o=Object.values(n.automations).flatMap((function(e){return e.on})).filter(Boolean),s=f([].concat(a,o));!(r=s()).done;)this.validateSuppertedTriggers(r.value)},r}(w),q=function(e){function r(){var r;return(r=e.call(this)||this).steps=[new x,new C,new P,new N,new j,new V],r}return o(r,e),r.prototype.validate=function(e){for(var r,t=w.parseJinjaExpressions(e),n=f(this.steps);!(r=n()).done;)r.value.validate({expressions:t,yamlFile:e})},r}(w);exports.ActionsValidator=P,exports.CMValidator=q,exports.ContextVariableValidator=x,exports.FileStructureValidator=N,exports.FiltersValidator=C,exports.SavedWordsValidator=j,exports.validatorsConstants=T;
//# sourceMappingURL=gitstream-core-js.cjs.production.min.js.map
