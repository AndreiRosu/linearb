{"version":3,"file":"gitstream-core.cjs.development.js","sources":["../src/consts.ts","../src/rules-parser/args.definitions.ts","../src/rules-parser/filters/common.ts","../src/rules-parser/filters/general-filters.ts","../src/utils/providers.ts","../src/rules-parser/filters/high-level-filters-helper.ts","../src/rules-parser/filters/filter-validators.ts","../src/rules-parser/filters/async-filter-helper.ts","../src/rules-parser/filters/explain-expert-filter-helper.ts","../src/rules-parser/filters/async-filters.ts","../src/utils/formatters.ts","../src/rules-parser/filters/integrations-filters/sonar/helpers.ts","../src/rules-parser/filters/integrations-filters/sonar/sonar.ts","../src/rules-parser/filters/integrations-filters/jit/helpers.ts","../src/rules-parser/filters/integrations-filters/jit/jit.ts","../src/rules-parser/filters/integrations-filters/jit/index.ts","../src/rules-parser/filters/high-level-filters.ts","../src/rules-parser/old-filters/filters.ts","../src/rules-parser/types.ts","../src/rules-parser/validators-types.ts","../src/rules-parser/rules.parser.ts","../src/rule-engine/common/const.ts","../src/rule-engine/common/logger.ts","../src/rule-engine/providers/index.ts","../src/rule-engine/utils/git/const.ts","../src/rule-engine/utils/git/contributorsStatHelper.ts","../src/rule-engine/utils/git/contributersStat.ts","../src/rule-engine/utils/matchContributors.ts","../src/rule-engine/utils/types.ts","../src/rule-engine/utils/error.handler.ts","../src/rule-engine/utils/converters.ts","../src/rule-engine/utils/git/diffParserHelper.ts","../src/rule-engine/utils/diffParser.ts","../src/rule-engine/utils/git.service.ts","../src/rule-engine/utils/cache.ts","../src/rule-engine/api/requests/expertReviewerContext.ts","../src/rule-engine/api/requests/expertReviewerRequest.ts","../src/rule-engine/api/getExpertReviewer.ts","../src/rule-engine/common/notify/amplitude.service.ts","../src/rule-engine/common/notify/segment.service.ts","../src/rule-engine/common/notify/analytics.handler.ts","../src/rule-engine/utils/ruleParser.validator.ts","../src/rule-engine/utils/ruleParser.ts","../src/rule-engine/utils/run.ts","../src/rule-engine/run-ci.ts","../src/rule-engine/index.ts"],"sourcesContent":["export const ENVS = {\n  PROD: 'prod',\n  DEV: 'dev',\n  LOCAL: 'local',\n};\nexport const ENV = ENVS.PROD;\nexport const BASE_URL =\n  ENV === ENVS.PROD\n    ? 'https://workerb.linearb.io'\n    : ENV === ENVS.DEV\n    ? 'https://workerb.linearb-dev-03.io'\n    : 'http://localhost:3131';\n\nexport const AWS_BASE_URL =\n  'https://gtxblnqb99.execute-api.us-west-1.amazonaws.com/prod';\n\nexport const API_ENDPOINTS = {\n  REVIEW_TIME: AWS_BASE_URL + '/v1/pulls/review-time',\n  EXPERT_REVIWER: AWS_BASE_URL + '/gs/v1/data-service/expert-reviewer',\n};\n\nconst PACKAGE_NAME = 'gitstream-rules-parser';\n\nexport const ERRORS = {\n  FAILED_RENDER_STRING: PACKAGE_NAME + ' - failed render string',\n  FAILED_YAML_LOAD: PACKAGE_NAME + ' - failed yaml.load',\n  INVALID_CM: PACKAGE_NAME + ' - invalid cm',\n  INVALID_CM_CONTEXT_VARIABLES: PACKAGE_NAME + ' - ContextVariableValidator',\n};\n\nexport const STATUS_CODES = {\n  FAILED_RENDER_STRING: 80,\n  FAILED_YAML_LOAD: 81,\n  INVALID_CM: 82,\n  INVALID_CM_CONTEXT_VARIABLES: 83,\n};\n","export const argsDefinitionsByAction = {\n  'add-comment@v1': { comment: { name: 'comment', type: 'string' } },\n  'add-label@v1': { label: { name: 'label', type: 'string' } },\n  'add-labels@v1': { labels: { name: 'labels', type: 'list' } },\n  'add-reviewers@v1': {\n    reviewers: { name: 'reviewers', type: 'list' },\n    team_reviewers: { name: 'team_reviewers', type: 'list' },\n  },\n  'merge@v1': {\n    wait_for_all_checks: { name: 'wait_for_all_checks', type: 'boolean' },\n    rebase_on_merge: { name: 'rebase_on_merge', type: 'boolean' },\n    squash_on_merge: { name: 'squash_on_merge', type: 'boolean' },\n  },\n  'require-reviewers@v1': { reviewers: { name: 'reviewers', type: 'list' } },\n  'set-required-approvals@v1': {\n    approvals: { name: 'approvals', type: 'number' },\n  },\n  'request-changes@v1': {\n    comment: { name: 'comment', type: 'number' },\n  },\n};\n\nexport const listify = [\n  argsDefinitionsByAction['add-reviewers@v1'].reviewers.name,\n  argsDefinitionsByAction['require-reviewers@v1'].reviewers.name,\n  argsDefinitionsByAction['add-reviewers@v1'].team_reviewers.name,\n  argsDefinitionsByAction['add-labels@v1'].labels.name,\n];\n","import { FiltersUsage } from './filter-types';\n\nexport const internalIncludes = (file: string, searchTerm: string) =>\n  file?.includes(searchTerm);\n\nexport const internalRegex = (\n  file: string,\n  searchTerm: string,\n  multiline: boolean = false\n) => {\n  // possible inputs are regular expressions as 'strings' or /regex/ standard javascript\n  // literals. a 3rd input is a string with a nunjuks 'r/regex/', this happens when a\n  // a nunjucks regex expression is injected back into the context.\n  // this 3rd type is non standard RegExp and therefore should inverted back.\n\n  // if it is a nunjuks regex string, convert it to compatible RegExp string\n  if (typeof searchTerm === 'string' && searchTerm.startsWith('r/')) {\n    // from the nunjuks regex patterns remove the 'r/' and the last '/'\n    searchTerm = searchTerm.substring(2).slice(0, -1);\n    // replace any \\/ back to /\n    searchTerm = searchTerm.replace('\\\\/', '/');\n  }\n\n  const re = new RegExp(searchTerm, multiline ? 'm' : '');\n  return re.test(file);\n};\n\nexport const internalEvery = (arr: boolean[], value: boolean) => {\n  const bools = arr?.map((item) => Boolean(item));\n  return bools?.length ? bools.every((element) => element === value) : false;\n};\n\nexport const formatInputToList = (input: any): any[] => {\n  if (typeof input === 'string') {\n    if (input.includes(',')) {\n      return input.split(',');\n    } else {\n      return [input];\n    }\n  }\n  return input ?? [];\n};\n\nconst PROVIDER = {\n  GITHUB: 'github',\n  GITLAB: 'gitlab',\n  BITBUCKET: 'bitbucket',\n};\n\nexport const PROVIDER_NAME: any = {\n  [PROVIDER.GITHUB]: 'GitHub',\n  [PROVIDER.GITLAB]: 'GitLab',\n  [PROVIDER.BITBUCKET]: 'BitBucket',\n};\n\nexport const DOCS_LINK_COMMENT =\n  '\\n \\nTo learn more about /:\\\\ gitStream - [Visit our Docs](https://docs.gitstream.cm/) \\n \\n';\n\nexport const MONTH: { [key: string]: string } = {\n  '01': 'JAN',\n  '02': 'FEB',\n  '03': 'MAR',\n  '04': 'APR',\n  '05': 'MAY',\n  '06': 'JUN',\n  '07': 'JUL',\n  '08': 'AUG',\n  '09': 'SEP',\n  '10': 'OCT',\n  '11': 'NOV',\n  '12': 'DEC',\n};\n\nexport class FiltersForAnalytics {\n  public static filters: FiltersUsage = {};\n}\n\nexport const handleAnalytics = (filterName: string, filterArgs: any[]) => {\n  FiltersForAnalytics.filters = {\n    ...FiltersForAnalytics.filters,\n    [filterName]: { args: filterArgs },\n  };\n};\n","import _ from 'lodash';\nimport {\n  formatInputToList,\n  handleAnalytics,\n  internalEvery,\n  internalIncludes,\n  internalRegex,\n} from './common';\nimport { filterArgs } from './filter-types';\n\nconst parseSome = (list: boolean[]): boolean => {\n  handleAnalytics(GeneralFilters.some, []);\n  const formattedList = formatInputToList(list)?.map((item) => Boolean(item));\n  return (\n    Boolean(formattedList?.length) &&\n    formattedList.some((match: boolean) => match)\n  );\n};\n\nconst parseEvery = (list: boolean[]): boolean => {\n  handleAnalytics(GeneralFilters.every, []);\n  return internalEvery(formatInputToList(list), true);\n};\n\nconst termRegexOrList = (\n  file: any,\n  attribute: string,\n  term: string,\n  regex: string,\n  list: any[]\n) =>\n  term\n    ? internalIncludes(attribute ? file[attribute] : file, term)\n    : regex\n    ? internalRegex(attribute ? file[attribute] : file, regex)\n    : list.some((search) =>\n        internalIncludes(attribute ? file[attribute] : file, search)\n      );\n\nconst filterList = (\n  files: any,\n  attribute: string,\n  term: string,\n  regex: string,\n  list: any[],\n  isReject: boolean\n) => {\n  return files.filter((file: any) =>\n    isReject\n      ? !termRegexOrList(file, attribute, term, regex, list)\n      : termRegexOrList(file, attribute, term, regex, list)\n  );\n};\n\nconst mapList = (\n  files: any,\n  attribute: string,\n  term: string,\n  regex: string,\n  list: any[],\n  isReject: boolean\n) =>\n  files.map((file: any) =>\n    isReject\n      ? !termRegexOrList(file, attribute, term, regex, list)\n      : termRegexOrList(file, attribute, term, regex, list)\n  );\n\nconst calculateList = (\n  files: any[],\n  args: filterArgs,\n  callbackName: string,\n  isReject: boolean = false\n) => {\n  const attribute: string = args.attr || '';\n  const { term, regex, list } = args;\n  const formattedFiles = formatInputToList(files);\n  if (!term && !regex && !list) {\n    return [];\n  }\n  let formattedList = list;\n  if (list) {\n    formattedList = formatInputToList(list);\n  }\n  return callbackName === 'filterList'\n    ? filterList(\n        formattedFiles,\n        attribute,\n        term,\n        regex,\n        formattedList,\n        isReject\n      )\n    : mapList(formattedFiles, attribute, term, regex, formattedList, isReject);\n};\n\nconst parseFilter = (files: any[], args: filterArgs) => {\n  handleAnalytics(GeneralFilters.filter, [args]);\n  return calculateList(files, args, 'filterList');\n};\n\nconst parseReject = (files: any[], args: filterArgs) => {\n  handleAnalytics(GeneralFilters.reject, [args]);\n  return calculateList(files, args, 'filterList', true);\n};\n\nconst parseMap = (files: any[], { attr }: { attr: string }) => {\n  handleAnalytics(GeneralFilters.map, [{ attr }]);\n  return formatInputToList(files).map((file: any) => file[attr]);\n};\n\nconst parseIncludes = (file: string, args: filterArgs) => {\n  handleAnalytics(GeneralFilters.includes, [args]);\n  const { term, regex, list } = args;\n  if (!term && !regex && !list) {\n    return false;\n  }\n  let formattedList = list;\n  if (list) {\n    formattedList = formatInputToList(list);\n  }\n  return term\n    ? internalIncludes(file, term)\n    : regex\n    ? internalRegex(file, regex)\n    : formattedList.some((term: any) => file.includes(term));\n};\n\nconst parseMatch = (files: any[], args: filterArgs) => {\n  handleAnalytics(GeneralFilters.match, [args]);\n  return calculateList(files, args, 'mapList');\n};\n\nconst parseNope = (arr: boolean[]) => {\n  handleAnalytics(GeneralFilters.match, []);\n  return internalEvery(formatInputToList(arr), false);\n};\n\nconst parseIntersection = (listA: any[], args: { list: any[] }) => {\n  handleAnalytics(GeneralFilters.intersection, [args]);\n  const { list: listB } = args;\n  if (!listB) {\n    return false;\n  }\n  return _.intersection(listA, listB);\n};\n\nconst parseDifference = (listA: any[], args: { list: any[] }) => {\n  handleAnalytics(GeneralFilters.difference, [args]);\n  const { list: listB } = args;\n  if (!listB) {\n    return false;\n  }\n  return _.difference(listA, listB);\n};\n\nexport enum GeneralFilters {\n  some = 'some',\n  every = 'every',\n  filter = 'filter',\n  includes = 'includes',\n  reject = 'reject',\n  map = 'map',\n  match = 'match',\n  nope = 'nope',\n  intersection = 'intersection',\n  difference = 'difference',\n}\n\nexport const GENERAL_FILTERS_HANDLER: any = {\n  [GeneralFilters.some]: parseSome,\n  [GeneralFilters.every]: parseEvery,\n  [GeneralFilters.filter]: parseFilter,\n  [GeneralFilters.reject]: parseReject,\n  [GeneralFilters.map]: parseMap,\n  [GeneralFilters.includes]: parseIncludes,\n  [GeneralFilters.match]: parseMatch,\n  [GeneralFilters.nope]: parseNope,\n  [GeneralFilters.intersection]: parseIntersection,\n  [GeneralFilters.difference]: parseDifference,\n};\n","import { ProviderFormating } from '../rules-parser/filters/filter-types';\n\nexport const ADDITIONAL_FORMATTING: ProviderFormating = {\n  github: '',\n  gitlab: '  \\n',\n  default: '',\n};\n","import { ADDITIONAL_FORMATTING } from '../../utils/providers';\nimport { DOCS_LINK_COMMENT } from './common';\nimport {\n  FileMetric,\n  Metric,\n  Activity,\n  ExplainObject,\n  rankByLinesArgs,\n} from './filter-types';\n\nconst calculateSumByAuthor = (\n  authorMetric: FileMetric,\n  author: string\n): Metric =>\n  Object.values(authorMetric).reduce((aa: Metric, item: Metric) => {\n    const precent = item[author];\n    const totalPercent = (precent ?? 0) + (aa[author] ?? 0);\n    return { ...aa, ...(totalPercent && { [author]: totalPercent }) };\n  }, {});\n\nexport const convertAndSumContributors = (\n  contributors: Metric,\n  gitToProviderUser: any\n): Metric => {\n  return Object.keys(contributors).reduce((acc: Metric, gitAuthor: string) => {\n    let score = contributors[gitAuthor];\n    if (acc[gitToProviderUser[gitAuthor]]) {\n      score = contributors[gitAuthor] + acc[gitToProviderUser[gitAuthor]];\n    }\n    const author =\n      gitToProviderUser[gitAuthor]?.includes('@') ||\n      !gitToProviderUser[gitAuthor]\n        ? gitAuthor + '\\\\*'\n        : gitToProviderUser[gitAuthor];\n    return { ...acc, [author]: score };\n  }, {});\n};\n\nexport const convertContributorsAndBlame = (repo: any) => {\n  const blame = Object.keys(repo.blame).reduce(\n    (acc: FileMetric, file: string) => {\n      return {\n        ...acc,\n        [file]: convertAndSumContributors(\n          repo.blame[file],\n          repo.git_to_provider_user\n        ),\n      };\n    },\n    {}\n  );\n  return { blame };\n};\n\nexport const sumAuthorMetrics = (\n  contributors: string[],\n  authorMetric: FileMetric\n): Metric => {\n  const numOfFiles = Object.keys(authorMetric).length;\n  return contributors.reduce((acc: Metric, author: string) => {\n    const sumByAuthor: Metric = calculateSumByAuthor(authorMetric, author);\n    return {\n      ...acc,\n      ...(sumByAuthor[author] && {\n        [author]: sumByAuthor[author] / numOfFiles,\n      }),\n    };\n  }, {});\n};\n\nexport const convertToProviderUser = (repo: any, gitObject: Metric) =>\n  Object.keys(gitObject).reduce((acc: Metric, gitAuthor: string) => {\n    if (repo.git_to_provider_user[gitAuthor]) {\n      return {\n        ...acc,\n        [repo.git_to_provider_user[gitAuthor]]:\n          gitObject[gitAuthor] || gitAuthor,\n      };\n    }\n    return acc;\n  }, {});\n\nexport const calculateActivityPerFile = (\n  activity: Activity,\n  weeksArr: string[]\n): FileMetric =>\n  Object.keys(activity).reduce((acc, file) => {\n    const totalPerFile = Object.values(activity[file]).reduce(\n      (ac: Metric, linesPerWeek: Metric) => {\n        weeksArr.forEach((week) => {\n          const item = linesPerWeek[week];\n          if (item) {\n            ac[week] = (ac[week] ?? 0) + item;\n          }\n        });\n        return { ...ac };\n      },\n      {}\n    );\n    return { ...acc, [file]: totalPerFile };\n  }, {});\n\nexport const calculateFileSumPerAuthorActivity = (\n  activity: Activity,\n  weeksArr: string[],\n  totalsPerFile: FileMetric\n): FileMetric =>\n  Object.keys(activity).reduce((acc: FileMetric, file: string) => {\n    const calcPercent: Metric = Object.keys(activity[file]).reduce(\n      (acAuthor: Metric, author: string) => {\n        let arrSum: number[] = [];\n        weeksArr.forEach((week: string) => {\n          if (totalsPerFile[file][week] && activity[file][author][week]) {\n            arrSum.push(\n              (activity[file][author][week] / totalsPerFile[file][week]) * 100\n            );\n          }\n        });\n        const total: number =\n          arrSum.reduce((a: number, b: number) => a + b, 0) / arrSum.length;\n        return {\n          ...acAuthor,\n          ...(arrSum.length && { [author]: parseInt(total?.toFixed(0)) }),\n        };\n      },\n      {}\n    );\n    return { ...acc, [file]: calcPercent };\n  }, {});\n\nexport const sortObject = (data: any[], object: any) =>\n  data.sort((a: any, b: any) => (object[b] ?? 0) - (object[a] ?? 0));\n\nconst compareThan = (data: Metric, gt: number, lt: number) => {\n  const authors = Object.keys(data).filter((author: string) =>\n    gt !== undefined ? data[author] > gt : data[author] < lt\n  );\n  const sortedAuthors = sortObject(authors, data);\n\n  return sortedAuthors.reduce((acc: any, author: string) => {\n    if (author.includes('*')) {\n      return acc;\n    }\n    return { ...acc, ...{ [author]: data[author] } };\n  }, {});\n};\n\nexport const validateAndCompare = (\n  authorMetrics: Metric,\n  gt: number,\n  lt: number\n): Metric | {} =>\n  Object.keys(authorMetrics).length ? compareThan(authorMetrics, gt, lt) : {};\n\nexport const convertBlameContextToExplain = (repo: any) => {\n  const { blame } = convertContributorsAndBlame(repo);\n  return Object.keys(blame).reduce((acc: any, file: string) => {\n    if (file === '/dev/null') {\n      return acc;\n    }\n    const sortedAuthors = sortObject(Object.keys(blame[file]), blame[file]);\n    const formattedValues = sortedAuthors.reduce(\n      (accAuthor: ExplainObject, author) => {\n        if (!blame[file][author]) {\n          return accAuthor;\n        }\n        const formatGitAuthor = author.replace(/\\\"\\“/g, '').replace('“', '');\n        let formattedValue = `${\n          Math.floor(blame[file][author])\n            ? Math.floor(blame[file][author])\n            : '<1'\n        }%`;\n        if (\n          accAuthor[formatGitAuthor] &&\n          parseInt(accAuthor[formatGitAuthor]) > parseInt(formattedValue)\n        ) {\n          formattedValue = accAuthor[formatGitAuthor];\n        }\n        return { ...accAuthor, [formatGitAuthor]: formattedValue };\n      },\n      {}\n    );\n    return { ...acc, [file]: formattedValues };\n  }, {});\n};\n\nconst suggestedReviewersComment = (\n  authorFilteredParseResult: string,\n  argsTemplate: string,\n  numOfPRFiles: number,\n  isNoUserButYou: boolean\n) => {\n  const formattedComment = authorFilteredParseResult\n    ? ` 👋  **Suggested reviewers: ${authorFilteredParseResult}**\\n \\nThey contributed ${argsTemplate} of the lines on pre-existing files`\n    : ` 👋  **Suggested reviewers: no user ${\n        isNoUserButYou ? 'but you' : ''\n      } matched**\\n \\nNo ${\n        numOfPRFiles ? 'other ' : ''\n      }user contributed ${argsTemplate} of the lines on pre-existing files`;\n  return formattedComment;\n};\n\nexport const explainBlameTemplate = (\n  args: rankByLinesArgs,\n  authorFilteredParseResult: string,\n  formattedBlameContext: any,\n  provider: string,\n  isNoUserButYou: boolean\n) => {\n  const { gt, lt } = args;\n  const argsTemplate = gt ? `more than ${gt}%` : `less than ${lt}%`;\n\n  const numOfPRFiles = Object.keys(formattedBlameContext).length;\n  let parserResultTemplate = suggestedReviewersComment(\n    authorFilteredParseResult,\n    argsTemplate,\n    numOfPRFiles,\n    isNoUserButYou\n  );\n  parserResultTemplate += numOfPRFiles ? ':\\n' : '. \\n ';\n  parserResultTemplate += Object.keys(formattedBlameContext).length\n    ? '<details>\\n <summary>See details</summary>\\n'\n    : '';\n  parserResultTemplate += '\\n';\n  Object.keys(formattedBlameContext).forEach((file) => {\n    if (Object.keys(formattedBlameContext[file]).length === 0) {\n      return;\n    }\n    parserResultTemplate += `\\n\\`${file}\\` \\n${\n      ADDITIONAL_FORMATTING[provider] || ADDITIONAL_FORMATTING.default\n    }`; //Supporting new lines format for gitlab\n    Object.keys(formattedBlameContext[file]).forEach((author) => {\n      parserResultTemplate += `${author}: ${\n        formattedBlameContext[file][author]\n      } \\n${ADDITIONAL_FORMATTING[provider] || ADDITIONAL_FORMATTING.default}`; //Supporting new lines format for gitlab\n    });\n  });\n  parserResultTemplate += '\\n</details>\\n';\n  const isGitUser = Object.values(formattedBlameContext)\n    .map((item: any) => Object.keys(item).some((x) => x.includes('*')))\n    .some((result) => result);\n\n  parserResultTemplate += isGitUser\n    ? ` \\nGit users that could not be automatically mapped are marked with \\`*\\`.\\n${\n        ADDITIONAL_FORMATTING[provider] || ADDITIONAL_FORMATTING.default\n      }To map these users, refer to the instructions [here](https://docs.gitstream.cm/cm-file#config).\\n \\n`\n    : ''; //Supporting new lines format for gitlab\n  parserResultTemplate += DOCS_LINK_COMMENT;\n  return parserResultTemplate;\n};\n","import { rankByLinesArgs } from './filter-types';\n\nexport const isGtLtArgsValid = (args: rankByLinesArgs) => {\n  const { gt, lt } = args;\n  return !!gt || !!lt;\n};\n","import axios from 'axios';\nimport { API_ENDPOINTS } from '../../consts';\nimport { rankByLinesArgs } from './filter-types';\n\n//TODO: map request to object\nexport const getETR = async (request: any) => {\n  const {\n    data: { numericValue },\n  } = await axios.post(API_ENDPOINTS.REVIEW_TIME, request, {\n    headers: {\n      'Content-type': 'application/json',\n    },\n  });\n  return { numericValue };\n};\n\n//TODO: map request to object\nexport const getExpertReviewer = async (request: any) => {\n  if (request) {\n    const { data } = await axios.post(API_ENDPOINTS.EXPERT_REVIWER, request, {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    });\n    return data || {};\n  }\n  return {};\n};\n\nexport const filterExpertResult = (\n  data: any,\n  gt: number,\n  lt: number,\n  filterBy: string\n) => {\n  const thresholdData = Object.keys(data).reduce((acc, user) => {\n    if (\n      gt !== undefined\n        ? data[user][filterBy] > gt / 100\n        : data[user][filterBy] < lt / 100\n    ) {\n      return { ...acc, [user]: data[user] };\n    }\n    return acc;\n  }, {});\n\n  return (\n    Object.keys(thresholdData).filter(\n      (contributor) => !contributor.includes('@') && !contributor.includes('<>')\n    ) || []\n  );\n};\n\nexport const parseExpertReviewerThreshold = (args: rankByLinesArgs): number => {\n  const { gt, lt } = args;\n  return gt ? gt : lt ? lt : 0.1;\n};\n\nexport const getAndFilterExpertReviewer = async (repo: any) => {\n  const data = await getExpertReviewer(\n    repo.data_service?.expert_reviwer_request\n  );\n  if (!Object.keys(data).length) {\n    return { data: {}, dataWithoutIssuer: {}, isIssuerFiltered: false };\n  }\n\n  let isIssuerFiltered = false;\n  const dataWithoutIssuer = Object.keys(data).reduce((acc, author) => {\n    if (author === repo.pr_author) {\n      isIssuerFiltered = true;\n      return acc;\n    }\n    return { ...acc, [author]: data[author] };\n  }, {});\n  return { data, dataWithoutIssuer, isIssuerFiltered };\n};\n","import { MONTH } from './common';\nimport moment from 'moment';\nimport { ActivityExplain, FileMetric } from './filter-types';\nimport { sortObject } from './high-level-filters-helper';\nimport { ADDITIONAL_FORMATTING } from '../../utils/providers';\n\nexport const explainExpertReviewerComment = (\n  expertReviewers: string[],\n  activeUsers: string[],\n  knowledgeUsers: string[],\n  threshold: number,\n  provider: string,\n  isNoUserButYou: boolean\n) => {\n  let comment = '🥷 **Code experts:';\n  comment += expertReviewers.length\n    ? ` ${expertReviewers.join(', ')}** \\n \\n`\n    : ` no user ${\n        isNoUserButYou ? 'but you' : ''\n      } matched threshold ${threshold}** \\n \\n`;\n\n  if (activeUsers.length) {\n    comment += `${activeUsers.join(', ')} ${\n      activeUsers.length === 1 ? 'has' : 'have'\n    } most 👩‍💻 **activity** in the files. \\n${\n      ADDITIONAL_FORMATTING[provider] || ADDITIONAL_FORMATTING.default\n    }`;\n  }\n  if (knowledgeUsers.length) {\n    comment += `${knowledgeUsers.join(', ')} ${\n      knowledgeUsers.length === 1 ? 'has' : 'have'\n    } most 🧠 **knowledge** in the files. \\n`;\n  }\n  return comment;\n};\n\nconst explainActivityByMonth = (\n  activity: any,\n  file: string,\n  activityUsers: string[]\n) => {\n  let monthsComment = '';\n  const months: string[] = [];\n  for (let index = 0; index < 6; index++) {\n    months.push(MONTH[moment().subtract(index, 'months').format('MM')]);\n  }\n  months.forEach((month) => {\n    const user1Value = activity[file][activityUsers[0]][month];\n    const user2Value = activity[file][activityUsers[1]]?.[month];\n    monthsComment += `| ${month} | ${\n      user1Value\n        ? user1Value.additions +\n          ' additions & ' +\n          user1Value.deletions +\n          ' deletions'\n        : ' '\n    } |`;\n    monthsComment += `${\n      user2Value\n        ? user2Value.additions +\n          ' additions & ' +\n          user2Value.deletions +\n          ' deletions |'\n        : ' '\n    } \\n`;\n  });\n  return monthsComment;\n};\n\nconst explainActivityTable = (\n  file: string,\n  activity: any,\n  activityUsers: string[]\n) => {\n  if (!Object.keys(activity).length) {\n    return '\\n\\nNo activity in the last 6 months\\n\\n'; // can be extract to const NO_ACTIVITY_MESSAGE\n  }\n  if (activityUsers.length) {\n    let table = `\\n\\nActivity based on git-commit: \\n\\n |  | ${\n      activityUsers[0] ? activityUsers[0] : ' '\n    } | ${\n      activityUsers[1]\n        ? activityUsers[1] + '| \\n | --- | --- | --- | \\n '\n        : ' \\n | --- | --- | \\n'\n    }`;\n    table += explainActivityByMonth(activity, file, activityUsers);\n    return table;\n  }\n  return '';\n};\n\nconst explainKnowledgeSection = (\n  file: string,\n  knowledge: any,\n  knowledgeUsers: string[],\n  provider: string\n) => {\n  let knowledgeText = '';\n  const sortedAuthors = sortObject(knowledgeUsers, knowledge[file]);\n  sortedAuthors.forEach((author) => {\n    knowledgeText += knowledge[file][author]\n      ? `${author}: ${knowledge[file][author]}% \\n${\n          ADDITIONAL_FORMATTING[provider] || ADDITIONAL_FORMATTING.default\n        }`\n      : '';\n  });\n  return knowledgeText;\n};\n\nexport const explainActivityAndBlameComment = (\n  files: string[],\n  activity: any,\n  knowledge: any,\n  activityUsers: string[],\n  knowledgeUsers: string[],\n  provider: string\n) => {\n  try {\n    let comment = '<details>\\n <summary>See details</summary>\\n\\n';\n    files.forEach((file) => {\n      comment += `\\n\\`${file}\\` \\n ${explainActivityTable(\n        file,\n        activity,\n        activityUsers\n      )} \\n\\nKnowledge based on git-blame: \\n ${\n        ADDITIONAL_FORMATTING[provider] || ADDITIONAL_FORMATTING.default\n      }${explainKnowledgeSection(file, knowledge, knowledgeUsers, provider)}`;\n    });\n    comment += `\\n</details>\\n`;\n    return comment;\n  } catch (error) {\n    console.log('Error in creating explain code experts comment', error);\n    return '';\n  }\n};\n\nconst parseActivityByUserDataForExplain = (\n  activity: any,\n  file: string,\n  user: string\n) => {\n  return Object.keys(activity[file]).reduce((ac, date) => {\n    if (activity[file][date][user]) {\n      const formatedDate: string = MONTH[date.split('-')?.[1]];\n      return {\n        ...ac,\n        [formatedDate]: activity[file][date][user],\n      };\n    }\n    return ac;\n  }, {});\n};\nconst parseActivityByUserForExplain = (\n  activity: any,\n  file: string,\n  activeUsers: string[]\n) => {\n  return activeUsers.reduce((au, user) => {\n    const activityData = parseActivityByUserDataForExplain(\n      activity,\n      file,\n      user\n    );\n    return { ...au, [user]: activityData };\n  }, {});\n};\n\nexport const getExplainActivity = (\n  activity: ActivityExplain,\n  activeUsers: string[]\n) => {\n  return Object.keys(activity || {}).reduce((acc, file) => {\n    const userActivity = parseActivityByUserForExplain(\n      activity,\n      file,\n      activeUsers\n    );\n    return { ...acc, [file]: userActivity };\n  }, {});\n};\n\nexport const getExplainKnowledge = (\n  blame: FileMetric,\n  knowledgeUsers: string[]\n) => {\n  return Object.keys(blame || {}).reduce((acc, file) => {\n    const sortedAuthors = sortObject(knowledgeUsers, blame[file]);\n    const userKnowledge = sortedAuthors.reduce((au, user) => {\n      if (blame[file][user]) {\n        return {\n          ...au,\n          [user]: Math.round(blame[file][user] * 100),\n        };\n      }\n      return au;\n    }, {});\n    return { ...acc, [file]: userKnowledge };\n  }, {});\n};\n","import { rankByLinesArgs } from './filter-types';\nimport { FileMetadata } from '../context/types';\nimport {\n  filterExpertResult,\n  getAndFilterExpertReviewer,\n  getETR,\n  parseExpertReviewerThreshold,\n} from './async-filter-helper';\nimport { DOCS_LINK_COMMENT, handleAnalytics } from './common';\nimport {\n  explainActivityAndBlameComment,\n  explainExpertReviewerComment,\n  getExplainActivity,\n  getExplainKnowledge,\n} from './explain-expert-filter-helper';\nimport { HighLevelFilters } from './high-level-filters';\n\nconst DELETED_PATH = '/dev/null';\n\nexport const estimatedReviewTime = async (branch: any, callback: any) => {\n  handleAnalytics(HighLevelFilters.estimatedReviewTime, []);\n  const numOfFiles = branch.diff?.files_metadata.length;\n  const { additionalLines, deletedLines } = branch.diff?.files_metadata.reduce(\n    (acc: any, file: FileMetadata) => {\n      acc.additionalLines += file.additions;\n      acc.deletedLines += file.deletions;\n      return acc;\n    },\n    { additionalLines: 0, deletedLines: 0 }\n  );\n  const prFiles = branch.diff?.files_metadata.map(\n    (fileMetadata: FileMetadata) => ({\n      file_path:\n        fileMetadata.new_file !== DELETED_PATH\n          ? fileMetadata.new_file\n          : fileMetadata.original_file,\n      additions: fileMetadata.additions,\n      deletions: fileMetadata.deletions,\n    })\n  );\n  const reqBody = {\n    prMetadata: {\n      commits: branch.num_of_commits,\n      files: numOfFiles,\n      lines: additionalLines + deletedLines,\n    },\n    prFiles: prFiles,\n    prAdditionalLines: additionalLines,\n    prDeletedLines: deletedLines,\n    baseBranch: branch.base,\n    request_source: 'gitstream',\n  };\n\n  const { numericValue } = await getETR(reqBody);\n  callback(null, numericValue);\n};\n\nexport const parseExpertReviewer = async (\n  repo: any,\n  { gt = 0, lt = 0 }: rankByLinesArgs,\n  callback: any\n) => {\n  try {\n    handleAnalytics(HighLevelFilters.expertReviewer, [{ gt, lt }]);\n    const { dataWithoutIssuer } = await getAndFilterExpertReviewer(repo);\n    if (!Object.keys(dataWithoutIssuer).length) {\n      callback(null, []);\n    }\n\n    const expertReviewers = filterExpertResult(\n      dataWithoutIssuer,\n      gt,\n      lt,\n      'reviewer_score'\n    ).slice(0, 2);\n    callback(null, expertReviewers);\n  } catch (error) {\n    console.log('error:', error);\n    callback(null, []);\n  }\n};\n\nexport const parseExplainCodeExpertHandler = async (\n  repo: any,\n  args: rankByLinesArgs,\n  callback: any\n) => {\n  try {\n    const { gt, lt } = args;\n    const { data, dataWithoutIssuer, isIssuerFiltered } =\n      await getAndFilterExpertReviewer(repo);\n    if (!Object.keys(data).length || !Object.keys(dataWithoutIssuer).length) {\n      callback(null, []);\n    }\n    const expertReviewers = filterExpertResult(\n      dataWithoutIssuer,\n      gt,\n      lt,\n      'reviewer_score'\n    ).slice(0, 2);\n    const activeUsers = filterExpertResult(\n      data,\n      gt,\n      lt,\n      'avg_activity_score'\n    ).slice(0, 2);\n    const knowledgeUsers = filterExpertResult(\n      data,\n      gt,\n      lt,\n      'avg_blame_perc'\n    ).slice(0, 2);\n\n    const explainActivity = getExplainActivity(\n      data.explain?.activity,\n      activeUsers\n    );\n\n    const explainKnowledge = getExplainKnowledge(\n      data.explain?.blame,\n      knowledgeUsers\n    );\n\n    const explainComment = `${explainExpertReviewerComment(\n      expertReviewers,\n      activeUsers,\n      knowledgeUsers,\n      parseExpertReviewerThreshold(args),\n      repo.provider,\n      isIssuerFiltered && !Object.keys(expertReviewers).length\n    )} ${explainActivityAndBlameComment(\n      Array.from(\n        new Set([\n          ...Object.keys(explainActivity),\n          ...Object.keys(explainKnowledge),\n        ])\n      ),\n      explainActivity,\n      explainKnowledge,\n      activeUsers,\n      knowledgeUsers,\n      repo.provider\n    )} \\n\\n ${DOCS_LINK_COMMENT} \\n`;\n\n    const base64Comment = `base64: ${Buffer.from(explainComment).toString(\n      'base64'\n    )}`;\n\n    callback(null, base64Comment);\n  } catch (error) {\n    console.log('error:', error);\n    callback(``);\n  }\n};\n\nexport const parseCodeExperts = async (\n  repo: any,\n  { gt = 0, lt = 0 }: rankByLinesArgs,\n  callback: any\n) => {\n  handleAnalytics(HighLevelFilters.codeExperts, [{ gt, lt }]);\n  await parseExpertReviewer(repo, { gt, lt }, callback);\n};\n\nexport const parseExplainExpertReviewer = async (\n  repo: any,\n  args: rankByLinesArgs,\n  callback: any\n) => {\n  handleAnalytics(HighLevelFilters.explainExpertReviewer, [args]);\n  await parseExplainCodeExpertHandler(repo, args, callback);\n};\n\nexport const parseExplainCodeExperts = async (\n  repo: any,\n  args: rankByLinesArgs,\n  callback: any\n) => {\n  handleAnalytics(HighLevelFilters.explainCodeExperts, [args]);\n  await parseExplainCodeExpertHandler(repo, args, callback);\n};\n","import _ from 'lodash';\nimport prettier from 'prettier';\nimport { spawnSync } from 'child_process';\n\nconst PYTHON_COMMAND = 'python';\n\nexport const minify = (text: string) =>\n  text.replace(/\\s+/g, ' ').replaceAll(\"'\", '\"').trim();\n\nexport const removeEmptyLines = (text: string) =>\n  text.replace(/^\\s*[\\r\\n]/gm, '');\n\nexport const jsFormatter = (content: string, file: string) => {\n  return minify(\n    prettier.format(content, {\n      semi: false,\n      singleQuote: true,\n      filepath: file,\n    })\n  );\n};\nexport const pyFormatter = (content: string) => {\n  // Format the code with black\n  const blackResult = spawnSync(PYTHON_COMMAND, [\n    '-c',\n    `import black; print(black.format_str(${JSON.stringify(\n      content\n    )}, mode=black.FileMode()))`,\n  ]);\n  const formattedCode = blackResult.stdout.toString();\n  return removeEmptyLines(formattedCode);\n};\n\nconst SUPPORTED_FORMATTERS = {\n  js: jsFormatter,\n  ts: jsFormatter,\n  html: jsFormatter,\n  py: pyFormatter,\n  default: minify,\n};\nexport const format = (content: string, file: string) => {\n  const fileExtension = file.split('.').pop() ?? '';\n  const formatter = _.get(\n    SUPPORTED_FORMATTERS,\n    fileExtension,\n    SUPPORTED_FORMATTERS.default\n  );\n  return formatter(content, file);\n};\n\nexport const convertArgsToString = (args: any) => {\n  return Object.keys(args).map((key) => `${key}=${args[key]}`);\n};\n","export const SONAR_REGEX = {\n  BUGS: /\\[\\d+ Bugs?\\]/g,\n  VULNERABILITIES: /\\[\\d+ Vulnerabilit(?:ies|y)\\]/g,\n  SECURITY_HOTSPOTS: /\\[\\d+ Security Hotspots?\\]/g,\n  CODE_SMELL: /\\[\\d+ Code Smells?\\]/g,\n  DUPLICATIONS: /\\[(\\d+(\\.\\d+)?|\\.\\d+)%\\]/g,\n  COVERAGE: /\\[(\\d+(\\.\\d+)?|\\.\\d+)%\\]/g,\n  RATING: /!\\[([A-Z])\\]/g,\n};\n\nexport const getSonarPropertyRating = (str: string): string => {\n  const rawRating = str.match(SONAR_REGEX.RATING)?.[0];\n  const rating = rawRating?.substring(\n    rawRating.lastIndexOf('[') + 1,\n    rawRating.indexOf(']')\n  );\n  return rating ? rating : '';\n};\n\nexport const getSonarPropertyCount = (\n  row: string,\n  regex: any,\n  isFloat: boolean = false\n): number | null => {\n  const count =\n    (isFloat\n      ? parseFloat(row.match(regex)?.[0].split(/\\s+/)[0].replace('[', '') || '')\n      : parseInt(\n          row.match(regex)?.[0].split(/\\s+/)[0].replace('[', '') || ''\n        )) ?? null;\n  return isNaN(count) ? null : count;\n};\n","import { Sonar } from './types';\nimport {\n  SONAR_REGEX,\n  getSonarPropertyCount,\n  getSonarPropertyRating,\n} from './helpers';\nimport { handleAnalytics } from '../../common';\nimport { HighLevelFilters } from '../../high-level-filters';\n\nexport const parseSonarParser = (pr: any): string => {\n  handleAnalytics(HighLevelFilters.sonarParser, []);\n  let sonarObject: Sonar = {\n    bugs: { count: null, rating: '' },\n    code_smells: { count: null, rating: '' },\n    vulnerabilities: { count: null, rating: '' },\n    security_hotspots: { count: null, rating: '' },\n    duplications: null,\n    coverage: null,\n  };\n  const sonarComment = pr.comments.filter(\n    (comment: any) => comment.commenter === 'sonarcloud'\n  );\n  if (sonarComment.length) {\n    const sonarCommentArray = sonarComment[0].content.split('\\n');\n    sonarObject.bugs = {\n      count: getSonarPropertyCount(sonarCommentArray[2], SONAR_REGEX.BUGS),\n      rating: getSonarPropertyRating(sonarCommentArray[2]),\n    };\n    sonarObject.code_smells = {\n      count: getSonarPropertyCount(\n        sonarCommentArray[5],\n        SONAR_REGEX.CODE_SMELL\n      ),\n      rating: getSonarPropertyRating(sonarCommentArray[5]),\n    };\n\n    sonarObject.vulnerabilities = {\n      count: getSonarPropertyCount(\n        sonarCommentArray[3],\n        SONAR_REGEX.VULNERABILITIES\n      ),\n      rating: getSonarPropertyRating(sonarCommentArray[3]),\n    };\n\n    sonarObject.security_hotspots = {\n      count: getSonarPropertyCount(\n        sonarCommentArray[4],\n        SONAR_REGEX.SECURITY_HOTSPOTS\n      ),\n      rating: getSonarPropertyRating(sonarCommentArray[4]),\n    };\n    sonarObject.duplications = getSonarPropertyCount(\n      sonarCommentArray[8],\n      SONAR_REGEX.DUPLICATIONS,\n      true\n    );\n    sonarObject.coverage = getSonarPropertyCount(\n      sonarCommentArray[7],\n      SONAR_REGEX.COVERAGE,\n      true\n    );\n  }\n\n  return JSON.stringify(sonarObject);\n};\n","import _ from 'lodash';\nimport { Jit, Severity } from './types';\nimport { IPRContext } from '../../../context/types';\n\nconst JIT_USER = 'jit-ci';\n\nexport const parseJitReview = (review: any): Jit => {\n  const parsedReview: Jit = initEmptyJitObject();\n  const conversations = review.conversations;\n  conversations.forEach((conversation: any) => {\n    const content = conversation.content;\n    const lines = content.split('\\n');\n    const security_control = lines[0]?.split('**')[2]?.trim();\n    const type = lines[2]?.split('**')[2]?.trim();\n    const description = lines[4]?.split('**')[2]?.trim();\n    const severity: Severity = lines[6]?.split('**')[2]?.trim();\n    const _summary =\n      lines[10]?.split('<summary>')[1]?.split('</summary>')[0] ?? '';\n    const summary = _summary.replace(/<b>/g, '').replace(/<\\/b>/g, '');\n    parsedReview.vulnerabilities.push({\n      security_control,\n      type,\n      description,\n      severity,\n      summary,\n    });\n    parsedReview.metrics[severity] = (parsedReview.metrics[severity] ?? 0) + 1;\n  });\n  return parsedReview;\n};\n\nexport const unifyReviews = (parsedReviews: Jit[], jitObject: Jit) => {\n  return parsedReviews.reduce(\n    (acc: any, review: any) => {\n      console.log({ acc, review });\n      return {\n        ...acc,\n        vulnerabilities: [...acc.vulnerabilities, ...review.vulnerabilities],\n        metrics: _.mergeWith(\n          acc.metrics,\n          review.metrics,\n          (a, b) => (a || 0) + (b || 0)\n        ),\n      };\n    },\n    { ...jitObject }\n  );\n};\n\nexport const extractJitCommentsFromPR = (pr: IPRContext) => {\n  return pr.reviews.filter(\n    ({ commenter }: { commenter: string }) => commenter === JIT_USER\n  );\n};\n\nexport const initEmptyJitObject = () => {\n  return {\n    vulnerabilities: [],\n    metrics: {\n      HIGH: null,\n      MEDIUM: null,\n      LOW: null,\n      INFO: null,\n    },\n  };\n};\n","import { IPRContext } from '../../../context/types';\nimport { handleAnalytics } from '../../common';\nimport { HighLevelFilters } from '../../high-level-filters';\nimport {\n  extractJitCommentsFromPR,\n  initEmptyJitObject,\n  parseJitReview,\n  unifyReviews,\n} from './helpers';\nimport _ from 'lodash';\n\nexport const parseJitComments = (pr: IPRContext): string => {\n  handleAnalytics(HighLevelFilters.extractJitFindings, []);\n  const jitComments = extractJitCommentsFromPR(pr);\n  const jitObject = initEmptyJitObject();\n  if (_.isEmpty(jitComments)) {\n    return JSON.stringify(jitObject);\n  }\n  const parsedReviews = jitComments.map(parseJitReview);\n  return JSON.stringify(unifyReviews(parsedReviews, jitObject));\n};\n","import { parseJitComments } from './jit';\nexport default { extractJitFindings: parseJitComments };\n","import { File } from '../context/types';\nimport { handleAnalytics, internalRegex } from './common';\nimport {\n  Metric,\n  matchDiffLinesArgs,\n  rankByGitActivityArgs,\n  rankByLinesArgs,\n  FileMetric,\n  EnumArgs,\n} from './filter-types';\nimport _ from 'lodash';\nimport {\n  calculateFileSumPerAuthorActivity,\n  calculateActivityPerFile,\n  sumAuthorMetrics,\n  validateAndCompare,\n  convertBlameContextToExplain,\n  explainBlameTemplate,\n  convertContributorsAndBlame,\n  convertAndSumContributors,\n} from './high-level-filters-helper';\nimport { isGtLtArgsValid } from './filter-validators';\nimport {\n  estimatedReviewTime,\n  parseCodeExperts,\n  parseExpertReviewer,\n  parseExplainCodeExperts,\n  parseExplainExpertReviewer,\n} from './async-filters';\nimport { format } from '../../utils/formatters';\nimport parseSonarParser from './integrations-filters/sonar';\nimport jitFilter from './integrations-filters/jit';\n\nconst parseExtractSonarFindings = (pr: any): string => {\n  handleAnalytics(HighLevelFilters.extractSonarFindings, []);\n  return parseSonarParser(pr);\n};\n\nconst parserMapToEnum = (key: string, args: EnumArgs) => {\n  handleAnalytics(HighLevelFilters.mapToEnum, [key, args]);\n  const enumArgs = args?.enum;\n  if (enumArgs && Object.keys(enumArgs).length) {\n    return enumArgs[key];\n  }\n};\n\nconst parseFilterAllTests = (files: string[], extensions: string[]) => {\n  const regex = new RegExp(`[^a-zA-Z0-9](${extensions.join('|')})[^a-zA-Z0-9]`);\n  return (\n    Boolean(files.length) &&\n    files\n      .map((filePath: string) => regex.test(filePath || ''))\n      .every((x: boolean) => x)\n  );\n};\n\nconst parseFilterAllFilePath = (files: string[], searchArray: string[]) =>\n  Boolean(files.length) &&\n  files\n    .map((filePath: string) =>\n      searchArray.some((term: string) => (filePath || '').includes(term))\n    )\n    .every((x: boolean) => x);\n\nconst parseFilterAllExtensions = (files: string[], extensions: string[]) =>\n  files.length\n    ? parseFilterAllFilePath(\n        files.map((filePath: string) => filePath.split('.').pop() || ''),\n        extensions\n      )\n    : false;\n\nconst getUniqueExtensions = (files: string[]) => {\n  handleAnalytics(HighLevelFilters.extensions, []);\n  return (\n    files\n      // extensions\n      .map((x: string) => x.split('.').pop())\n      // unique\n      .filter((value, index, array) => array.indexOf(value) === index)\n  );\n};\n\nconst parseIsFormattingChange = (files: File[]) => {\n  try {\n    handleAnalytics(HighLevelFilters.isFormattingChange, []);\n    const allFormatting =\n      Boolean(files.length) &&\n      files.every(\n        ({ new_content, original_content, original_file, new_file }) => {\n          const formattedNew = format(new_content, new_file);\n          const formattedOld = format(original_content, original_file);\n          return formattedNew === formattedOld;\n        }\n      );\n    return allFormatting;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst parseMatchDiffLines = (files: File[], args: matchDiffLinesArgs) => {\n  handleAnalytics(HighLevelFilters.matchDiffLines, [args]);\n  const { regex, ignoreWhiteSpaces } = args;\n  const diffLinesRegex = new RegExp('^[+-]');\n  const emptyLinesRegex = new RegExp('^[+-]\\\\s*$');\n  return !regex\n    ? []\n    : files\n        .map(({ diff }) =>\n          diff\n            .split('\\n')\n            .filter((row) => diffLinesRegex.test(row))\n            .filter((row) =>\n              ignoreWhiteSpaces ? !emptyLinesRegex.test(row) : true\n            )\n            .map((diffRow) => internalRegex(diffRow, regex))\n        )\n        .flat(1);\n};\n\nconst parseIsFirstCommit = (contributors: any, author: string) => {\n  handleAnalytics(HighLevelFilters.isFirstCommit, [{ author }]);\n  return _.get(contributors, author, null) ? false : true;\n};\n\nconst parseRankByGitBlame = (repo: any, args: rankByLinesArgs) => {\n  handleAnalytics(HighLevelFilters.rankByGitBlame, [args]);\n  if (!isGtLtArgsValid(args)) {\n    return [];\n  }\n  const { gt, lt } = args;\n  const { blame } = convertContributorsAndBlame(repo);\n  const blameByAuthor = sumAuthorMetrics(\n    Object.values(repo.git_to_provider_user),\n    blame\n  );\n  const comparedResult = validateAndCompare(blameByAuthor, gt, lt);\n  return Object.keys(comparedResult).length\n    ? [...Array.from(new Set(Object.keys(comparedResult)))]\n    : [];\n};\n\nconst parseRankByGitActivity = (repo: any, args: rankByGitActivityArgs) => {\n  handleAnalytics(HighLevelFilters.rankByGitActivity, [args]);\n  const { gt, lt, weeks } = args;\n  if ((!gt && !lt) || !weeks) {\n    return [];\n  }\n  const weeksArr: string[] = new Array(weeks + 1)\n    .fill(0)\n    .map((_, i) => `week_${i}`);\n\n  const totalsPerFile: FileMetric = calculateActivityPerFile(\n    repo.git_activity,\n    weeksArr\n  );\n  const fileSumPerAuthor: FileMetric = calculateFileSumPerAuthorActivity(\n    repo.git_activity,\n    weeksArr,\n    totalsPerFile\n  );\n  const activityByAuthor: Metric = sumAuthorMetrics(\n    Object.keys(repo.contributors),\n    fileSumPerAuthor\n  );\n  const convertContributors = convertAndSumContributors(\n    activityByAuthor,\n    repo.git_to_provider_user\n  );\n  const comparedResult: Metric = validateAndCompare(\n    convertContributors,\n    gt,\n    lt\n  );\n\n  return Object.keys(comparedResult).length\n    ? [...Array.from(new Set(Object.keys(comparedResult)))]\n    : [];\n};\n\nconst parseExplainRankByGitBlame = (repo: any, args: rankByLinesArgs) => {\n  handleAnalytics(HighLevelFilters.explainRankByGitBlame, [args]);\n  if (!isGtLtArgsValid(args)) {\n    return {};\n  }\n  const parseResult = parseRankByGitBlame(repo, args);\n  const authorFilteredParseResult = _.filter(\n    parseResult,\n    (contributor) => contributor !== repo.pr_author\n  );\n  const authorFilteredParseResultString = authorFilteredParseResult.join(', ');\n  const isNoUserButYou =\n    !authorFilteredParseResult.length && parseResult.length > 0;\n\n  const formattedBlameContext = convertBlameContextToExplain(repo);\n  return `base64: ${Buffer.from(\n    explainBlameTemplate(\n      args,\n      authorFilteredParseResultString,\n      formattedBlameContext,\n      repo.provider,\n      isNoUserButYou\n    )\n  ).toString('base64')}`;\n};\n\nexport enum HighLevelFilters {\n  allDocs = 'allDocs',\n  allImages = 'allImages',\n  allTests = 'allTests',\n  estimatedReviewTime = 'estimatedReviewTime',\n  extensions = 'extensions',\n  isFormattingChange = 'isFormattingChange',\n  matchDiffLines = 'matchDiffLines',\n  isFirstCommit = 'isFirstCommit',\n  rankByGitBlame = 'rankByGitBlame',\n  rankByGitActivity = 'rankByGitActivity',\n  explainRankByGitBlame = 'explainRankByGitBlame',\n  expertReviewer = 'expertReviewer',\n  explainExpertReviewer = 'explainExpertReviewer',\n  codeExperts = 'codeExperts',\n  explainCodeExperts = 'explainCodeExperts',\n  sonarParser = 'sonarParser',\n  mapToEnum = 'mapToEnum',\n  extractSonarFindings = 'extractSonarFindings',\n  extractJitFindings = 'extractJitFindings',\n}\n\nconst FILTERED_OUT_LIST = {\n  [HighLevelFilters.allDocs]: ['requirements.txt'],\n};\n\nexport const FILTERS_EXTENSION_LIST = {\n  [HighLevelFilters.allDocs]: ['md', 'mkdown', 'txt', 'rst', '.adoc'],\n  [HighLevelFilters.allImages]: ['svg', 'png', 'gif'],\n  [HighLevelFilters.allTests]: ['test', 'spec'],\n};\n\nexport const HIGH_LEVEL_FILTERS_HANDLER: any = {\n  [HighLevelFilters.allDocs]: (files: string[]) => {\n    handleAnalytics(HighLevelFilters.allDocs, []);\n    return (\n      Boolean(files.length) &&\n      files.every((file) =>\n        FILTERED_OUT_LIST[HighLevelFilters.allDocs].every(\n          (excludedFile) =>\n            !(file.includes('/' + excludedFile) || file === excludedFile)\n        )\n      ) &&\n      parseFilterAllExtensions(\n        files,\n        FILTERS_EXTENSION_LIST[HighLevelFilters.allDocs]\n      )\n    );\n  },\n  [HighLevelFilters.allImages]: (files: string[]) => {\n    handleAnalytics(HighLevelFilters.allImages, []);\n    return parseFilterAllExtensions(\n      files,\n      FILTERS_EXTENSION_LIST[HighLevelFilters.allImages]\n    );\n  },\n  [HighLevelFilters.allTests]: (files: string[]) => {\n    handleAnalytics(HighLevelFilters.allTests, []);\n    return parseFilterAllTests(\n      files,\n      FILTERS_EXTENSION_LIST[HighLevelFilters.allTests]\n    );\n  },\n  [HighLevelFilters.estimatedReviewTime]: estimatedReviewTime,\n  [HighLevelFilters.extensions]: getUniqueExtensions,\n  [HighLevelFilters.isFormattingChange]: parseIsFormattingChange,\n  [HighLevelFilters.matchDiffLines]: parseMatchDiffLines,\n  [HighLevelFilters.isFirstCommit]: parseIsFirstCommit,\n  [HighLevelFilters.rankByGitBlame]: parseRankByGitBlame,\n  [HighLevelFilters.rankByGitActivity]: parseRankByGitActivity,\n  [HighLevelFilters.explainRankByGitBlame]: parseExplainRankByGitBlame,\n  [HighLevelFilters.expertReviewer]: parseExpertReviewer,\n  [HighLevelFilters.explainExpertReviewer]: parseExplainExpertReviewer,\n  [HighLevelFilters.codeExperts]: parseCodeExperts,\n  [HighLevelFilters.explainCodeExperts]: parseExplainCodeExperts,\n  [HighLevelFilters.sonarParser]: parseSonarParser,\n  [HighLevelFilters.mapToEnum]: parserMapToEnum,\n  [HighLevelFilters.extractSonarFindings]: parseExtractSonarFindings,\n  ...jitFilter,\n};\n\nexport const ASYNC: any = {\n  [HighLevelFilters.estimatedReviewTime]: true,\n  [HighLevelFilters.expertReviewer]: true,\n  [HighLevelFilters.explainExpertReviewer]: true,\n  [HighLevelFilters.codeExperts]: true,\n  [HighLevelFilters.explainCodeExperts]: true,\n};\n","import prettier from 'prettier';\nimport { File } from '../context/types';\n\nconst parseFilterAllFilePath = (files: string[], searchArray: string[]) => {\n  return (\n    files.length &&\n    files\n      .map((filePath: string) =>\n        searchArray.some((term: string) => (filePath || '').includes(term))\n      )\n      .every((x: boolean) => x === true)\n  );\n};\n\nconst parseIsEveryExtension = (files: string[], extensions: string[]) => {\n  return parseFilterAllFilePath(\n    files\n      .map((filePath: string) => filePath.split('.').pop() || '')\n      .filter((value, index, array) => array.indexOf(value) === index),\n    extensions\n  );\n};\n\nconst parseIsEveryExtensionRegex = (files: string[], filter: string) => {\n  const re = new RegExp(filter);\n  const extensions = files\n    .map((filePath: string) => filePath.split('.').pop() || '')\n    .filter((value, index, array) => array.indexOf(value) === index);\n\n  return (\n    extensions.length > 0 &&\n    extensions\n      .map((filePath: string) => re.test(filePath))\n      .every((match: any) => match)\n  );\n};\n\nconst parseExtractExtensions = (files: string[]) =>\n  files.length &&\n  files\n    // extensions\n    .map((x: string) => x.split('.').pop())\n    // unique\n    .filter((value, index, array) => array.indexOf(value) === index);\n\nconst parseIsStringIncludes = (file: string, terms: string[]) =>\n  terms.some((term: any) => file.includes(term));\n\nconst parseIsStringIncludesRegex = (file: string, filter: string) => {\n  const re = new RegExp(filter);\n  return re.test(file);\n};\n\nconst parseRegex = (files: string[], filter: string) => {\n  const re = new RegExp(filter);\n  return files.length\n    ? files.map((file: any) => re.test(file)).every((match: any) => match)\n    : false;\n};\n\nconst parseIsEveryInListRegex = (files: string[], filter: string) => {\n  const re = new RegExp(filter);\n  return files.length\n    ? files.map((file: any) => re.test(file)).every((match: any) => match)\n    : false;\n};\n\nconst parseIsEveryInList = (files: string[], filters: string[]) => {\n  return files.length\n    ? files\n        .filter((file: any) => filters.includes(file))\n        .every((match: any) => match)\n    : false;\n};\n\nconst parseIsSomeInList = (files: string[], searchTerms: string[]) => {\n  return files.length\n    ? files\n        .filter((file: any) => searchTerms.includes(file))\n        .some((match: any) => match)\n    : false;\n};\n\nconst parseIncludesRegex = (files: string[], filter: string) => {\n  const re = new RegExp(filter);\n  return files.length\n    ? files.map((file: any) => re.test(file)).some((match: any) => match)\n    : false;\n};\n\nconst parseIsSomeInListRegex = (files: string[], filter: string) => {\n  const re = new RegExp(filter);\n  return files.length\n    ? files.map((file: any) => re.test(file)).some((match: any) => match)\n    : false;\n};\n\nconst parseFilterRegex = (files: string[], filter: string) => {\n  const re = new RegExp(filter);\n  return files.length ? files.filter((file: any) => re.test(file)) : false;\n};\n\nconst parseFilterListRegex = (files: string[], filter: string) => {\n  const re = new RegExp(filter);\n  return files.length ? files.filter((file: any) => re.test(file)) : false;\n};\n\nconst parseFilterList = (files: string[], filters: string[]) => {\n  return files.length\n    ? files.filter((file: any) => filters.includes(file))\n    : false;\n};\n\nconst minify = (text: string) =>\n  text.replace(/\\s+/g, ' ').replaceAll(\"'\", '\"').trim();\n\nconst allFormattingChange = (files: File[]) => {\n  try {\n    const allFormatting = files.every(\n      ({ new_content, original_content, original_file, new_file }) => {\n        const formattedNew = prettier.format(new_content, {\n          semi: false,\n          singleQuote: true,\n          filepath: new_file,\n        });\n        const formattedOld = prettier.format(original_content, {\n          semi: false,\n          singleQuote: true,\n          filepath: original_file,\n        });\n        return minify(formattedNew) === minify(formattedOld);\n      }\n    );\n    return allFormatting;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst parseFilterFileDiffRegex = (files: File[], filterRegex: string) => {\n  const re = new RegExp(filterRegex, 'm');\n  return files.length ? files.filter(({ diff }) => re.test(diff)) : false;\n};\n\nconst parseIsEveryLineInFileDiffRegex = (\n  files: File[],\n  filterRegex: string\n) => {\n  const re = new RegExp(filterRegex, 'm');\n  return files.length\n    ? files.map(({ diff }) => re.test(diff)).every((match: any) => match)\n    : false;\n};\n\nconst parseIsSomeLineInFileDiffRegex = (files: File[], filterRegex: string) => {\n  const re = new RegExp(filterRegex, 'm');\n  return files.length\n    ? files.map(({ diff }) => re.test(diff)).some((match: any) => match)\n    : false;\n};\n\nconst parseFilterAllExtensions = (files: string[], extensions: string[]) => {\n  return files.length\n    ? parseFilterAllFilePath(\n        files.map((filePath: string) => filePath.split('.').pop() || ''),\n        extensions\n      )\n    : false;\n};\n\nexport enum Filters {\n  allExtensions = 'allExtensions',\n  includes = 'includes',\n  allPassRegex = 'allPassRegex',\n  allPathIncludes = 'allPathIncludes',\n  filterRegex = 'filterRegex',\n  includesRegex = 'includesRegex',\n  true = 'true',\n  allFormattingChange = 'allFormattingChange',\n  filterList = 'filterList',\n  filterListRegex = 'filterListRegex',\n  isEveryInListRegex = 'isEveryInListRegex',\n  isSomeInList = 'isSomeInList',\n  isSomeInListRegex = 'isSomeInListRegex',\n  isStringIncludes = 'isStringIncludes',\n  isStringIncludesRegex = 'isStringIncludesRegex',\n  isEveryInList = 'isEveryInList',\n  extractExtensions = 'extractExtensions',\n  isEveryExtension = 'isEveryExtension',\n  isEveryExtensionRegex = 'isEveryExtensionRegex',\n  filterFileDiffRegex = 'filterFileDiffRegex',\n  isEveryLineInFileDiffRegex = 'isEveryLineInFileDiffRegex',\n  isSomeLineInFileDiffRegex = 'isSomeLineInFileDiffRegex',\n}\n\nexport const FILTER_HANDLERS: any = {\n  [Filters.filterList]: parseFilterList,\n  [Filters.filterListRegex]: parseFilterListRegex,\n  [Filters.isEveryInListRegex]: parseIsEveryInListRegex,\n  [Filters.isSomeInList]: parseIsSomeInList,\n  [Filters.isSomeInListRegex]: parseIsSomeInListRegex,\n  [Filters.isStringIncludes]: parseIsStringIncludes,\n  [Filters.isStringIncludesRegex]: parseIsStringIncludesRegex,\n  [Filters.isEveryInList]: parseIsEveryInList,\n  [Filters.extractExtensions]: parseExtractExtensions,\n  [Filters.isEveryExtension]: parseIsEveryExtension,\n  [Filters.isEveryExtensionRegex]: parseIsEveryExtensionRegex,\n  [Filters.true]: () => true,\n  [Filters.filterFileDiffRegex]: parseFilterFileDiffRegex,\n  [Filters.isEveryLineInFileDiffRegex]: parseIsEveryLineInFileDiffRegex,\n  [Filters.isSomeLineInFileDiffRegex]: parseIsSomeLineInFileDiffRegex,\n  //TODO: remove soon - those filters are deprecated!\n  [Filters.allExtensions]: parseFilterAllExtensions,\n  [Filters.allPassRegex]: parseRegex,\n  [Filters.allPathIncludes]: parseFilterAllFilePath,\n  [Filters.filterRegex]: parseFilterRegex,\n  [Filters.includesRegex]: parseIncludesRegex,\n  [Filters.allFormattingChange]: allFormattingChange,\n};\n","export enum DefaultParserAttributes {\n  cbLeft = '_GITSTREAM_CB_LEFT_',\n  cbRight = '_GITSTREAM_CB_RIGHT_',\n  automations = 'automations',\n  errors = 'errors',\n  analytics = 'analytics',\n  validatorErrors = 'validatorErrors',\n}\n\nexport type Run = { action: string; args?: any };\n\nexport interface RulesParserError {\n  [statusCode: number]: string;\n}\n","export enum Validators {\n  FiltersValidator = 'FiltersValidator',\n  ActionsValidator = 'ActionsValidator',\n  FileStructureValidator = 'FileStructureValidator',\n  SavedWordsValidator = 'SavedWordsValidator',\n  ContextVariableValidator = 'ContextVariableValidator',\n}\n","import _ from 'lodash';\nimport {\n  validatorsConstants,\n  FiltersValidator,\n  ActionsValidator,\n  FileStructureValidator,\n  SavedWordsValidator,\n  ContextVariableValidator,\n} from '@linearb/gitstream-core-js';\nimport * as yaml from 'js-yaml';\nimport * as nunjucks from 'nunjucks';\nimport { ERRORS, STATUS_CODES } from '../consts';\nimport { listify } from './args.definitions';\nimport { Context } from './context/types';\nimport { GENERAL_FILTERS_HANDLER } from './filters/general-filters';\nimport {\n  ASYNC,\n  HIGH_LEVEL_FILTERS_HANDLER,\n} from './filters/high-level-filters';\nimport { FILTER_HANDLERS } from './old-filters/filters';\nimport { DefaultParserAttributes, RulesParserError, Run } from './types';\nimport { FiltersForAnalytics } from './filters/common';\nimport { convertArgsToString } from '../utils/formatters';\nimport { Validators } from './validators-types';\n\nexport default class RuleParser {\n  private env: nunjucks.Environment;\n  private renderedRuleFile: any = {};\n  private context: Context | {} = {};\n  private ruleFileRawContent: string;\n  private lastParserResult: any = {};\n  private isDebug: boolean | string;\n  private errors: RulesParserError = {};\n  private validatorErrors = {};\n\n  constructor(\n    ruleFileContent: string,\n    context: Context,\n    debugMode: boolean | string\n  ) {\n    this.isDebug = debugMode;\n    this.env = new nunjucks.Environment(\n      new nunjucks.FileSystemLoader(__dirname),\n      { autoescape: false }\n    );\n\n    const allFilters: any = {\n      ...GENERAL_FILTERS_HANDLER,\n      ...HIGH_LEVEL_FILTERS_HANDLER,\n      ...FILTER_HANDLERS,\n    };\n\n    Object.keys(allFilters).forEach((filter: any) => {\n      this.env.addFilter(filter, allFilters[filter], ASYNC[filter]);\n    });\n\n    this.context = context;\n    this.ruleFileRawContent = ruleFileContent;\n    if (this.isDebug) {\n      console.log({\n        context: JSON.stringify(this.context, null, 2),\n        ruleFile: ruleFileContent,\n      });\n    }\n  }\n\n  private async render(\n    context = { ...this.context, ...this.renderedRuleFile }\n  ) {\n    let reRenders = 3;\n    let currentContext = context;\n    while (reRenders) {\n      const dataAsString = this.ruleFileRawContent;\n      await new Promise((resolve, reject) =>\n        this.env.renderString(dataAsString, currentContext, (err, res) => {\n          if (err) {\n            if (this.isDebug) {\n              console.log(ERRORS.FAILED_RENDER_STRING, err);\n            }\n            reject(err);\n            return;\n          }\n          try {\n            this.renderedRuleFile = yaml.load(res!);\n          } catch (error) {\n            if (this.isDebug) {\n              console.log(ERRORS.FAILED_YAML_LOAD, error);\n            }\n            this.renderedRuleFile = {\n              ...this.renderedRuleFile,\n              errors: {\n                ...(Object.keys(this.errors).length && this.errors),\n                [STATUS_CODES.FAILED_YAML_LOAD]: ERRORS.FAILED_YAML_LOAD,\n              },\n            };\n          }\n          resolve(this);\n        })\n      );\n      reRenders -= 1;\n      currentContext = { ...this.context, ...this.renderedRuleFile };\n    }\n  }\n\n  private validateRun(runs: Run[]) {\n    if (!runs) {\n      return runs;\n    }\n    return runs.map((run) => {\n      if (!run.args) {\n        return run;\n      }\n      const newArgs = Object.keys(run.args).reduce((acc: any, arg: string) => {\n        const argValue = run.args[arg];\n        return {\n          ...acc,\n          [arg]:\n            argValue && listify.includes(arg) && typeof argValue === 'string'\n              ? argValue.split(',')\n              : run.args[arg],\n        };\n      }, {});\n      return { ...run, args: newArgs };\n    });\n  }\n\n  private combineMetadataWithRulesResult(resourceName: string) {\n    if (!this.renderedRuleFile[resourceName]) {\n      return {};\n    }\n    return Object.keys(this.renderedRuleFile[resourceName]).reduce(\n      (acc, resource) => {\n        const rules: any = this.renderedRuleFile[resourceName][resource].if.map(\n          (result: any) => {\n            return {\n              passed: result,\n            };\n          }\n        );\n        const passed = rules\n          .map(({ passed }: { passed: any }) => passed)\n          .every((pass: any) =>\n            typeof pass === 'object' ? !!Object.keys(pass || {}).length : !!pass\n          );\n        return {\n          ...acc,\n          [resource]: {\n            if: rules,\n            run: this.validateRun(\n              this.renderedRuleFile[resourceName][resource].run\n            ),\n            passed,\n          },\n        };\n      },\n      {}\n    );\n  }\n\n  private combineMetadataWithResult() {\n    this.lastParserResult = {\n      [DefaultParserAttributes.errors]: {\n        ...(Object.keys(this.errors).length && this.errors),\n      },\n      [DefaultParserAttributes.validatorErrors]: {\n        ...(Object.keys(this.validatorErrors).length && this.validatorErrors),\n      },\n      [DefaultParserAttributes.automations]: {\n        ...this.combineMetadataWithRulesResult(\n          DefaultParserAttributes.automations\n        ),\n      },\n      [DefaultParserAttributes.analytics]: {\n        ...(Object.keys(FiltersForAnalytics.filters).length &&\n          FiltersForAnalytics.filters),\n      },\n    };\n    return this.lastParserResult;\n  }\n\n  clearParserResults() {\n    this.renderedRuleFile = {};\n    this.ruleFileRawContent = '';\n    this.lastParserResult = {};\n  }\n\n  async attachAdditionalArgs() {\n    const latestResults = _.cloneDeep(this.lastParserResult);\n    const newAutomations = { ...latestResults.automations };\n    for (const automation of Object.keys(newAutomations)) {\n      for (const run of newAutomations[automation].run) {\n        if (\n          run.action ===\n          validatorsConstants.SUPPORTED_ACTIONS.EXPLAIN_CODE_EXPERTS\n        ) {\n          this.clearParserResults();\n          this.ruleFileRawContent = `comment: |\n          {{ repo | explainCodeExperts(${convertArgsToString(run.args)}) }}`;\n          await this.render();\n          run.args.comment = this.renderedRuleFile.comment;\n        }\n      }\n    }\n    this.lastParserResult = { ...latestResults, automations: newAutomations };\n    return this.lastParserResult;\n  }\n\n  validateCM(): void {\n    //TODO: in the near future we will add operational validators\n    // which will break gitstream\n    const validators: any = {\n      [Validators.FiltersValidator]: new FiltersValidator(),\n      [Validators.ActionsValidator]: new ActionsValidator(),\n      [Validators.FileStructureValidator]: new FileStructureValidator(),\n      [Validators.SavedWordsValidator]: new SavedWordsValidator(),\n      [Validators.ContextVariableValidator]: new ContextVariableValidator(),\n    };\n    Object.keys(validators).forEach((validator) => {\n      try {\n        validators[validator].validate({ yamlFile: this.ruleFileRawContent });\n      } catch (error) {\n        if (this.isDebug) {\n          console.log(`${validator} error: `, error);\n        }\n        this.validatorErrors = {\n          ...(Object.keys(this.validatorErrors).length && this.validatorErrors),\n          [validator]: `${error}`,\n        };\n      }\n    });\n  }\n\n  async parseStreams() {\n    this.validateCM();\n    await this.render();\n    this.combineMetadataWithResult();\n    await this.attachAdditionalArgs();\n\n    return this.lastParserResult;\n  }\n}\n","export const RULES_RESOLVER_URL = process.env.RULES_RESOLVER_URL;\nexport const HEAD_REF = process.env.HEAD_REF;\nexport const BASE_REF = process.env.BASE_REF;\nexport const CLIENT_PAYLOAD = process.env.CLIENT_PAYLOAD || '{}';\nexport const RESOLVER_TOKEN = process.env.RULES_RESOLVER_TOKEN;\nexport const DEBUG_MODE = process.env.DEBUG_MODE === 'true';\nexport const USE_CACHE = process.env.USE_CACHE === 'true';\nexport const ERRORS = {\n  SYNTAX_ERROR: 'syntax error',\n  RULE_FILE_NOT_FOUND: 'Rule file not found',\n  FAILED_TO_EXTRACT_ADMINS:\n    'gitstream.cm file not found - failed to extract admins',\n  SEND_RESULTS_TO_RESOLVER_FAILED:\n    'Failed sending evaluated rules to the resolver.',\n  SEND_RESULTS_TO_RESOLVER_SUCCEEDED:\n    'Sending evaluated rules to the resolver succeeded',\n  FAILED_TO_GET_CONTEXT: 'Failed getting PR context.',\n  FAILED_PARSE_CM_FILE: 'Failed while parsing CM file, to extract CM config',\n  MISSING_KEYWORD: 'Missing `automations` keyword in *.cm',\n  MALFORMED_EXPRESSION:\n    'There are spaces between the currly braces { { and } }',\n  FAILED_TO_PARSE_CM: 'Failed to parse cm',\n  FAILED_TO_GET_WATCHERS: 'Failed to get watchers from rules files',\n  GIT_COMMAND_FAILED: 'Git command failed. reason:',\n  INTERNAL_ERROR: 'gitstream-rules-engine internal error',\n  INVALID_CACHE: 'Invalid cache',\n  VALIDATOR_ERROR: 'Validator error',\n  FAILED_PARSE_RULES_PARSER_ERRORS: 'Failed parse rules parser errors',\n};\n\nexport const STATUS_CODES = {\n  SEND_RESULTS_TO_RESOLVER_FAILED: 50,\n  FAILED_TO_GET_CONTEXT: 40,\n  SYNTAX_ERROR: 60,\n  MISSING_KEYWORD: 61,\n  UNSUPPORTED_ACTION: 62,\n  UNSUPPORTED_ARGUMENT: 63,\n  MALFORMED_EXPRESSION: 64,\n  MISSING_REQUIRED_FIELDS: 65,\n  FAILED_TO_PARSE_CM: 66,\n  BAD_REVISION: 67,\n  INTERNAL_ERROR: 68,\n  RULE_FILE_NOT_FOUND: 70,\n  FAILED_TO_GET_WATCHERS: 71,\n  INVALID_CACHE: 72,\n  FAILED_PARSE_RULES_PARSER_ERRORS: 73,\n};\n\nexport const NOT_FOUND_FILE_PATH = '/dev/null';\n\nexport const IGNORE_PATTERNS_IN_DRY_RUN = [/.*.cm$/];\n\nexport const GIT_PROVIDER = {\n  GITHUB: 'github',\n  GITLAB: 'gitlab',\n};\n\nexport const ORG_LEVEL_REPO = 'cm';\n\nexport const WATCH_PR_EVENTS = {\n  APPROVALS: 'approvals',\n  CHECKS: 'checks',\n  DRAFT: 'draft',\n  DESCRIPTION: 'description',\n  REVIEWERS: 'reviewers',\n  STATUS: 'status',\n  TITLE: 'title',\n  LABELS: 'labels',\n};\n\nexport const WATCH_FILTERS = {\n  sonarParser: /\\bpr\\s*\\|\\s*sonarParser\\b/g,\n  extractSonarFindings: /\\bpr\\s*\\|\\s*extractSonarFindings\\b/g,\n};\n\nexport const RULES_PARSER_STATUS_CODES = {\n  FAILED_RENDER_STRING: 80,\n  FAILED_YAML_LOAD: 81,\n  INVALID_CM: 82,\n  INVALID_CM_CONTEXT_VARIABLES: 83,\n};\n","// @ts-nocheck\nimport axios from 'axios';\nimport { CLIENT_PAYLOAD, DEBUG_MODE } from './const';\n\nconst sendLogToDD = async (logData) => {\n  const { ddApiKey, env } = JSON.parse(CLIENT_PAYLOAD);\n  const data = {\n    ...logData,\n    env,\n    ddtags: `env:${env}`,\n    host: 'gitstream-github-action',\n  };\n  try {\n    const res = await axios({\n      method: 'post',\n      url: `https://http-intake.logs.datadoghq.com//api/v2/logs?dd-api-key=${ddApiKey}&ddsource=nodejs&service=gitstream-rules-engine`,\n      data,\n      headers: { 'Content-type': 'application/json' },\n    });\n    return res;\n  } catch (error) {\n    console.error(`Failed sending logs to datadog`);\n  }\n};\n\nexport const debug = (message) => {\n  if (DEBUG_MODE) {\n    console.log(message);\n  }\n};\n\nexport const prepareSendingLogsToDD = async (\n  level,\n  message,\n  payload,\n  extraData = {},\n  shouldReport = false\n) => {\n  if (DEBUG_MODE || shouldReport) {\n    const { owner, repo, pullRequestNumber, branch, triggeredBy } = payload;\n    await sendLogToDD({\n      level,\n      message,\n      data: {\n        ...(Object.keys(extraData).length && extraData),\n        org: owner,\n        repo,\n        pullRequestNumber,\n        branch,\n        triggeredBy,\n      },\n    });\n  }\n};\n","// @ts-nocheck\nimport yaml from 'js-yaml';\nimport { readRemoteFile } from '../utils/git.service';\n\nexport const attachAdditionalContextByProvider = (provider, context) => {\n  const attachContextByProvider = {\n    gitlab: (context) => {\n      return {\n        performNonSoftCommands: false,\n      };\n    },\n  };\n  const getContextCb = attachContextByProvider[provider];\n  const additionalContext = getContextCb ? getContextCb(context) : null;\n  return additionalContext || {};\n};\n","// @ts-nocheck\nexport const ACTIVITY_SINCE = '52 weeks ago';\n\nexport const gitCommands = {\n  GIT_BLAME: ({ branch, file }) =>\n    `git blame '${branch}' --line-porcelain -- '${file}'`,\n  GIT_LOG: ({ file }) => `git log -- '${file}'`,\n  GIT_BLAME_AUTHORS_FORMAT: () =>\n    `| grep '^author-mail\\\\|^author ' | sed '$!N;s/\\\\n/ /'`,\n  GIT_BLAME_STRING: () => `| sed -n '/^author /,/^author-mail /p'`,\n  COMMITER_PER_FILE: ({ file }) =>\n    `git shortlog -s -n --all --no-merges '${file}'`,\n  COMMITS_DATE_BY_AUTHOR: ({ branch, author }) =>\n    `git log '${branch}' --author='${author}' --format='%as' | sort | uniq`,\n  GIT_ACTIVITY: ({ branch, file, since }) =>\n    `git log --no-merges '${branch}' --since='${since}' --pretty=tformat:'%an <%ae>,%ad' --numstat -- '${file}'`,\n  AUTHORS_COUNT: () => `git log --format='%an <%ae>' | sort | uniq`,\n  REPO_FILES_COUNT: () => `git ls-files | wc -l`,\n  FIRST_COMMIT: ({ branch }) =>\n    `git rev-list --max-parents=0 '${branch}' --format=\"%cs\"`,\n};\n\nexport const GIT_ERRORS = {\n  GETTING_ALL_AUTHORS: 'Failed getting all authors of file',\n  GETTING_AUTHOR_LINES: 'Failed getting author lines of file',\n  GETTING_GIT_BLAME: 'Failed getting git blame of file',\n};\n\nexport const GIT_INFO = {\n  RAW_GIT_COMMANDS: 'Raw git commands for file in pr',\n  NO_DATA_FROM_GIT: 'No data returned from git in pr',\n};\n\nexport const REPO_FOLDER = {\n  DEFAULT: 'repo',\n  CM: 'cm',\n};\n\nexport const GIT_ERROR_TYPE = {\n  BAD_REVISION: 'bad revision',\n};\n\nexport const MAIN_RULES_FILE = 'gitstream.cm';\n","// @ts-nocheck\nimport { DEBUG_MODE, NOT_FOUND_FILE_PATH } from '../../common/const';\nimport { debug, prepareSendingLogsToDD } from '../../common/logger';\nimport { executeGitCommand, readRemoteFile } from '../git.service';\nimport { ACTIVITY_SINCE, gitCommands, GIT_ERRORS, GIT_INFO } from './const';\nimport _ from 'lodash';\n\nexport const groupByWeek = (activity) => {\n  const weekSum = activity.reduce((acc, cur, i) => {\n    const item =\n      i > 0 &&\n      acc.find(\n        ({ git_user, week }) => git_user === cur.git_user && week === cur.week\n      );\n    if (item) {\n      item.changes += cur.changes;\n      item.week = cur.week;\n    } else {\n      acc.push({\n        git_user: cur.git_user,\n        week: cur.week,\n        changes: cur.changes,\n      });\n    }\n    return acc;\n  }, []);\n\n  return weekSum.reduce((accSum, { git_user, week, changes }) => {\n    accSum[git_user] = accSum[git_user] || {};\n    accSum[git_user] = { ...accSum[git_user], [`week_${week}`]: changes };\n    return { ...accSum };\n  }, {});\n};\n\nexport const calculateLinesPercentage = (authorLines, allLinesCount) =>\n  authorLines && allLinesCount\n    ? authorLines >= allLinesCount\n      ? 100\n      : parseFloat(authorLines / allLinesCount) * 100\n    : 0;\n\nexport const formatDateToDays = async (date, context, payload) => {\n  if (!date) {\n    const { owner, repo, pullRequestNumber } = payload;\n    debug(\n      `Couldn't find git dates for author: ${context.branch.author}, base branch: ${context.branch.base}, head branch: ${context.branch.name}`\n    );\n    await prepareSendingLogsToDD(\n      'info',\n      `${GIT_INFO.NO_DATA_FROM_GIT} ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      {\n        author: context.branch.author,\n        baseBranch: context.branch.base,\n        headBranch: context.branch.name,\n      },\n      DEBUG_MODE\n    );\n    return 0;\n  }\n  const today = new Date();\n  const formattedDate = new Date(date);\n  return Math.abs(\n    parseInt((formattedDate - today) / (1000 * 60 * 60 * 24), 10)\n  );\n};\n\n//report git logs to DD - use carefully because it's the user's data\nexport const reportGitCommandsAndResults = async (file, branch, payload) => {\n  if (file === NOT_FOUND_FILE_PATH) {\n    //old file\n    return;\n  }\n  const { owner, repo, pullRequestNumber } = payload;\n  const gitBlameCommand = gitCommands.GIT_BLAME({ file, branch });\n  const gitActivityCommand = gitCommands.GIT_ACTIVITY({\n    file,\n    branch,\n    since: ACTIVITY_SINCE,\n  });\n  const gitLogCommand = gitCommands.GIT_LOG({ file });\n\n  try {\n    const gitBlame = executeGitCommand(gitBlameCommand)?.replace(/\\n/g, '\\\\n');\n    const gitActivity = executeGitCommand(gitActivityCommand)\n      ?.split('\\n')\n      ?.filter(Boolean);\n    const gitLog = executeGitCommand(gitLogCommand)?.replace(/\\n/g, '\\\\n');\n\n    const extraData = {\n      file,\n      gitBlameCommand,\n      gitActivityCommand,\n      gitLogCommand,\n      gitBlame,\n      gitActivity,\n      gitLog,\n    };\n    await prepareSendingLogsToDD(\n      'info',\n      `${GIT_INFO.RAW_GIT_COMMANDS} ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      extraData,\n      DEBUG_MODE\n    );\n  } catch (error) {\n    return;\n  }\n};\n\nexport const getAllAuthorsOfFile = (file, branch) => {\n  try {\n    const gitCommand = `${gitCommands.GIT_BLAME({\n      file,\n      branch,\n    })} ${gitCommands.GIT_BLAME_AUTHORS_FORMAT()}`;\n    const rawAuthors = executeGitCommand(gitCommand);\n\n    const authors = [\n      ...Array.from(\n        new Set(\n          rawAuthors\n            ?.replaceAll('author ', '')\n            .replaceAll('author-mail ', '')\n            .split('\\n')\n        )\n      ),\n    ]?.filter(Boolean);\n\n    return authors;\n  } catch (error) {\n    console.log(`${GIT_ERRORS.GETTING_ALL_AUTHORS} ${file}. ${error}`);\n    return [];\n  }\n};\n\nconst getAuthorLines = (allAuthors, author, file) => {\n  try {\n    const authorFormatted = `author ${author\n      ?.substring(0, author.indexOf('<') - 1)\n      ?.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\nauthor-mail ${author\n      ?.substring(author.indexOf('<'), author.indexOf('>') + 1)\n      .replace('+', '\\\\+')}`;\n\n    const regex = new RegExp(authorFormatted, 'g');\n\n    debug(\n      `formatted author: ${authorFormatted}. matches: ${\n        (allAuthors.match(regex) || []).length\n      }`\n    );\n\n    return (allAuthors.match(regex) || []).length;\n  } catch (error) {\n    console.log(`${GIT_ERRORS.GETTING_AUTHOR_LINES} ${file}. ${error}`);\n    return '0';\n  }\n};\n\nexport const getGitBlameString = (file, branch) => {\n  try {\n    const gitCommand = `${gitCommands.GIT_BLAME({\n      file,\n      branch,\n    })} ${gitCommands.GIT_BLAME_STRING()}`;\n    const allAuthors = executeGitCommand(gitCommand);\n    return allAuthors;\n  } catch (error) {\n    console.log(`${GIT_ERRORS.GETTING_GIT_BLAME} ${file}. ${error}`);\n    return '0';\n  }\n};\n\nexport const calculateStatisticsForBlame = (\n  allAuthors,\n  author,\n  file,\n  branch\n) => {\n  const authorLines = parseInt(getAuthorLines(allAuthors, author, file)) || '';\n  const allLinesCount = parseInt(getCodeLinesCount(file, branch));\n  debug(`calculateStatisticsForBlame: ${authorLines}, ${allLinesCount}`);\n  return { authorLines, allLinesCount };\n};\n\nconst readRemoteFileAndSplit = (file, branch) =>\n  readRemoteFile(file, branch)?.split(/\\r\\n|\\r|\\n/);\n\nconst isLastRowEmpty = (file, branch) => {\n  const allRows = readRemoteFileAndSplit(file, branch);\n  debug(\n    `all rows: ${allRows.length}. isEmpty: ${\n      allRows?.[allRows?.length - 1] === '' ? true : false\n    }`\n  );\n  return allRows?.[allRows?.length - 1] === '' ? true : false;\n};\n\nconst getCodeLinesCount = (file, branch) =>\n  isLastRowEmpty(file, branch)\n    ? readRemoteFileAndSplit(file, branch)?.length - 1\n    : readRemoteFileAndSplit(file, branch)?.length;\n\nexport const extractStatsFromRawItems = (rawItems) =>\n  rawItems?.reduce((acc, item) => {\n    const author = {\n      [item.replace(/ /g, '').trim().split('\\t')[1]]: {\n        count: item.replace(/ /g, '').trim().split('\\t')[0],\n      },\n    };\n    return { ...acc, ...author };\n  }, {});\n\nexport const splitDsAndBlameObjects = (blames) => {\n  let formattedBlame = _.cloneDeep(blames);\n  const dsBlame = Object.keys(formattedBlame).reduce((ac, key) => {\n    return { ...ac, [key]: formattedBlame[key].dsBlame };\n  }, {});\n\n  Object.keys(formattedBlame).forEach((file) => {\n    if (formattedBlame[file].dsBlame) {\n      delete formattedBlame[file].dsBlame;\n    }\n  });\n  return { formattedBlame, dsBlame };\n};\n\nexport const splitDsAndActivity = (gitActivity) => {\n  const formattedActivity = _.cloneDeep(gitActivity);\n  const dsActivity = Object.keys(formattedActivity).reduce((ac, key) => {\n    return { ...ac, [key]: formattedActivity[key].dsActivity };\n  }, {});\n\n  Object.keys(formattedActivity).forEach((file) => {\n    if (formattedActivity[file].dsActivity) {\n      delete formattedActivity[file].dsActivity;\n    }\n  });\n  return { formattedActivity, dsActivity };\n};\n","// @ts-nocheck\nimport { executeGitCommand } from '../git.service';\nimport moment from 'moment';\nimport {\n  calculateLinesPercentage,\n  calculateStatisticsForBlame,\n  extractStatsFromRawItems,\n  getAllAuthorsOfFile,\n  getGitBlameString,\n  groupByWeek,\n} from './contributorsStatHelper';\nimport { gitCommands } from './const';\nimport { debug } from '../../common/logger';\n\n//1. How many commiters per file → Single commiter (file changed by a single person)\nexport const commitersPerFile = (files) => ({\n  ...files.reduce((acc, file) => {\n    const rawItems = executeGitCommand(gitCommands.COMMITER_PER_FILE({ file }))\n      ?.split('\\n')\n      ?.filter(Boolean);\n    const stat = extractStatsFromRawItems(rawItems);\n    return { ...acc, ...{ [file]: { ...stat } } };\n  }, {}),\n});\n\n// 2. First commit date → New in repo = Welcome, add to PRs reviews for knowlede\n// 3. Last commit date → Retired = keep them up to date\nexport const commitsDateByAuthor = (author, branchName) => {\n  return executeGitCommand(\n    gitCommands.COMMITS_DATE_BY_AUTHOR({ author, branch: branchName })\n  )\n    ?.split('\\n')\n    ?.filter(Boolean);\n};\n\nconst buildTempActivity = (raw) => {\n  const activity = [];\n\n  for (let i = 0; i < raw.length; i += 2) {\n    const changes = raw[i + 1]?.split('\\t');\n    const authorData = raw[i]?.split(',');\n\n    if (authorData.length && changes.length) {\n      const date = authorData[1];\n      const weekChanges = parseInt(changes[0]) + parseInt(changes[1]);\n      if (date && weekChanges) {\n        const dateObject = new Date(date);\n        const momentDate = moment(dateObject).format('YYYY-MM-DD');\n        const weekNum = moment().diff(momentDate, 'weeks');\n        activity.push({\n          git_user: authorData[0],\n          week: weekNum,\n          changes: weekChanges,\n        });\n      }\n    }\n  }\n  return activity;\n};\n\n// 4. Recent activity (lines commited in a given time) → No-noob\nexport const recentAuthorActivity = (branchName, since, file) => {\n  const raw = executeGitCommand(\n    gitCommands.GIT_ACTIVITY({ branch: branchName, since, file })\n  );\n  const rawList = raw?.split('\\n')?.filter(Boolean);\n\n  const activity = buildTempActivity(rawList);\n  debug(`temp activity: ${JSON.stringify(activity)}`);\n  return { dsActivity: raw, groupByWeek: groupByWeek(activity) };\n};\n\n// 6. How many authors in repo → complexity\nexport const countAuthosInRepo = () =>\n  executeGitCommand(gitCommands.AUTHORS_COUNT())?.split('\\n')?.filter(Boolean);\n\n// 7. How many files in repo → complexity\nexport const countFilesInRepo = () =>\n  executeGitCommand(gitCommands.REPO_FILES_COUNT())?.trim();\n\n// 8. Repo first commit date → complexity (if long time)\nexport const getRepoFirstCommitDate = (branchName = 'develop') =>\n  executeGitCommand(gitCommands.FIRST_COMMIT({ branch: branchName }))?.split(\n    '\\n'\n  )?.[1];\n\nexport const blameByAuthor = (files, branch) => {\n  return {\n    ...files.reduce((acc, file) => {\n      const authors = getAllAuthorsOfFile(file, branch);\n      debug(`files authors: ${JSON.stringify(authors)}`);\n      const allAuthorsString = getGitBlameString(file, branch);\n      return {\n        ...acc,\n        ...{\n          [file]: authors.reduce((prevAuthor, author) => {\n            const { authorLines, allLinesCount } = calculateStatisticsForBlame(\n              allAuthorsString,\n              author,\n              file,\n              branch\n            );\n            return {\n              ...prevAuthor,\n              [author]: calculateLinesPercentage(authorLines, allLinesCount),\n              dsBlame: allAuthorsString.replaceAll(\n                '\\nauthor-mail',\n                ' author-mail'\n              ),\n            };\n          }, {}),\n        },\n      };\n    }, {}),\n  };\n};\n","// @ts-nocheck\nimport { prepareSendingLogsToDD } from '../common/logger';\n\nconst matchByEmail = (\n  contributorEmail,\n  providerUserLogin,\n  providerUserName\n) => {\n  if (!contributorEmail || typeof contributorEmail !== 'string') {\n    return null;\n  }\n  let email = contributorEmail.includes('@')\n    ? contributorEmail.split('@')[0]\n    : contributorEmail;\n  email = email?.includes('+') ? email.split('+')[1] : email;\n  email = email.replace(/\\./g, '');\n  return (\n    email.includes(providerUserName) ||\n    email.includes(providerUserLogin) ||\n    providerUserLogin?.includes(email) ||\n    providerUserName === email\n  );\n};\n\nconst matchByName = (contributorFullName, providerUserName) => {\n  if (\n    !providerUserName ||\n    !contributorFullName ||\n    typeof contributorFullName !== 'string' ||\n    typeof providerUserName !== 'string'\n  ) {\n    return false;\n  }\n  const formattedProviderName = providerUserName.trim().toLowerCase();\n  const formattedGitName = contributorFullName.trim().toLowerCase();\n  return formattedGitName?.includes(formattedProviderName);\n};\n\nconst formatProviderContributors = (providerContributors) =>\n  providerContributors\n    .map(({ login, name }) => ({ login, name }))\n    .filter(({ login, name }) => login || name);\n\nconst formatGitContributors = (gitContributors) =>\n  Object.keys(gitContributors).map((contributor) => {\n    const contributorMap = contributor.split(' ');\n    return {\n      email: contributorMap.pop(),\n      login: contributorMap.join(''),\n      name: contributorMap[0],\n      lastName: contributorMap[1],\n      fullName: contributorMap.join(' '),\n      reversedName: (contributorMap[1] || '') + contributorMap[0],\n      contributor,\n      contributions: gitContributors[contributor],\n    };\n  });\n\nconst getUserMappingFromConfig = async (rules, payload) => {\n  try {\n    const userMapping =\n      rules?.config?.user_mapping?.reduce((acc, authorObject) => {\n        const key = Object.keys(authorObject)[0];\n        const value = authorObject[key] ?? key;\n        return {\n          ...acc,\n          [key]: value,\n        };\n      }, {}) || {};\n    return userMapping;\n  } catch (error) {\n    const { owner, repo, pullRequestNumber } = payload;\n    await prepareSendingLogsToDD(\n      'info',\n      `Failed to parse user_mapping for pr ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { error: e?.message },\n      true\n    );\n    console.log('Failed to parse user_mapping: ', e);\n    return {};\n  }\n};\n\nconst matchContributorsFromProviderData = async (\n  providerContributors,\n  gitContributors,\n  payload\n) => {\n  try {\n    const providerContributorsFormatted =\n      formatProviderContributors(providerContributors);\n    const gitContributorsFormatted = formatGitContributors(gitContributors);\n    const matchContributionsList = {};\n    let unmachedContributors = [];\n    // round 1 - match by git email || match by git login\n    gitContributorsFormatted.forEach((contributor) => {\n      const match = providerContributorsFormatted.find(({ name, login }) => {\n        return (\n          matchByEmail(contributor.email, login, name) ||\n          matchByName(contributor.login, login)\n        );\n      });\n      if (match) {\n        matchContributionsList[contributor.contributor] = match.login;\n      } else {\n        unmachedContributors.push(contributor);\n      }\n    });\n    const fallback1 = [...unmachedContributors];\n    unmachedContributors = [];\n    // round 2 - match by git fullName || match by git reversedName\n    fallback1.forEach((contributor) => {\n      const match = providerContributorsFormatted.find(\n        ({ name }) =>\n          matchByName(contributor.fullName, name) ||\n          matchByName(contributor.reversedName, name)\n      );\n      if (match) {\n        matchContributionsList[contributor.contributor] = match.login;\n      } else {\n        unmachedContributors.push(contributor);\n      }\n    });\n    // round 3 - no matched provider. keep git signature (contributor)\n    unmachedContributors.forEach((contributor) => {\n      matchContributionsList[contributor.contributor] = contributor.contributor;\n    });\n    return matchContributionsList;\n  } catch (e) {\n    const { owner, repo, pullRequestNumber } = payload;\n    await prepareSendingLogsToDD(\n      'info',\n      `Failed to match contributors for pr: ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { error: e?.message },\n      true\n    );\n    console.error('Failed to match contributors', e);\n    return {};\n  }\n};\n\nconst mergeResults = (configContributors, matchedProviderContributors) =>\n  Object.keys(matchedProviderContributors).reduce((acc, authorKey) => {\n    return {\n      ...acc,\n      [authorKey]:\n        configContributors[authorKey] ?? matchedProviderContributors[authorKey],\n    };\n  }, {});\n\n// Example of git object (contributor):\n// {\n//   email: '<dekel.bayazi@tikalk.com>',\n//   login: 'DekelBayazi',\n//   name: 'Dekel',\n//   lastName: 'Bayazi',\n//   fullName: 'Dekel Bayazi',\n//   reversedName: 'BayaziDekel',\n//   contributor: 'Dekel Bayazi <dekel.bayazi@tikalk.com>',\n//   contributions: 1\n// }\n// ####################################################\n\n// Example of provider object (name, login):\n// {\n//   login: 'yeelali14',\n//   name: 'Yeela Lifshitz'\n// }\n// ####################################################\n\nexport const matchContributors = async (\n  providerContributors,\n  gitContributors,\n  payload,\n  rulesObj\n) => {\n  const { owner, repo, pullRequestNumber } = payload;\n\n  if (!providerContributors || !gitContributors) {\n    console.error('matchContributors failed: not provided data');\n    return {};\n  }\n\n  await prepareSendingLogsToDD(\n    'info',\n    `Gitstream matchContributors got contributors for pr: ${owner}/${repo}/${pullRequestNumber}`,\n    payload,\n    { providerContributors, gitContributors },\n    true\n  );\n  const matchContributorsFromProvider = await matchContributorsFromProviderData(\n    providerContributors,\n    gitContributors,\n    payload\n  );\n  const userMappingFromConfig = await getUserMappingFromConfig(\n    rulesObj,\n    payload\n  );\n  if (Object.keys(userMappingFromConfig).length) {\n    await prepareSendingLogsToDD(\n      'info',\n      `got contributors from config for pr: ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { userMappingFromConfig },\n      true\n    );\n\n    return mergeResults(userMappingFromConfig, matchContributorsFromProvider);\n  }\n\n  return matchContributorsFromProvider;\n};\n","export interface RulesEngineError {\n  [statusCode: number]: string;\n}\n\nexport let rulesEngineErrors: RulesEngineError[] = [];\n","// @ts-nocheck\nimport * as core from '@actions/core';\nimport axios from 'axios';\nimport { CLIENT_PAYLOAD } from '../common/const';\nimport { isExecutePlayground } from '..';\nimport { rulesEngineErrors } from './types';\n\nconst callWebhookOnError = async (payload) => {\n  const { repo, owner, pullRequestNumber } = payload;\n  const { gitlabCustomWebhookToken, webhook_url } = payload || {};\n  const body = {\n    context: payload,\n    status: 'failed',\n    repo,\n    owner,\n    pullRequestNumber,\n    webhookEvent: 'checkUpdate',\n    event_type: 'gs_custom_checkfail',\n  };\n  try {\n    await axios.post(webhook_url, JSON.stringify(body), {\n      headers: {\n        'Content-Type': 'application/json',\n        'x-gitlab-token': `${gitlabCustomWebhookToken}`,\n        'x-gitlab-event': 'checkUpdate',\n      },\n    });\n  } catch (error) {\n    console.error(`Failed sending inner webhook to gitstream-sls-pipeline`);\n  }\n};\nconst handleErrorByProvider = {\n  github: (message, payload, ruleFile) => {\n    const details = {\n      message,\n      owner: payload?.owner,\n      repo: payload?.repo,\n      branch: payload?.branch,\n    };\n    core.setFailed(JSON.stringify(details, null, 2));\n  },\n  gitlab: async (message, payload, ruleFile) => {\n    await callWebhookOnError(payload);\n    const decodedMessage = message.replace(/%0A/g, '\\n');\n    console.error(decodedMessage);\n  },\n  default: (message) => console.error(message),\n};\n\nexport const handleValidationErrors = async (\n  message,\n  statusCode,\n  payload,\n  ruleFile = ''\n) => {\n  const fullMessage = ruleFile\n    ? `Error in ${ruleFile.trim()} - ${message}`\n    : message;\n  if (!isExecutePlayground) {\n    const clientPayload = JSON.parse(CLIENT_PAYLOAD);\n    const { source } = payload || clientPayload || {};\n    const getErrorHandlerCb =\n      handleErrorByProvider[source] || handleErrorByProvider.default;\n    await getErrorHandlerCb(fullMessage, payload, ruleFile);\n    process.exit(statusCode);\n  } else {\n    console.log(`gitstream-core error: ${message}`);\n    rulesEngineErrors.push({ [statusCode]: `${message}` });\n  }\n};\n","// @ts-nocheck\nexport const fromBase64String = (base64string) => {\n  return Buffer.from(base64string, 'base64').toString('utf-8');\n};\n\nexport const toBase64String = (string) => {\n  return Buffer.from(string).toString('base64');\n};\n\nexport const convertRuleFileToStringSafe = (ruleFile) => {\n  const replacers = {\n    'pr.description': 'pr.description | nl2br | dump | safe',\n  };\n  return Object.keys(replacers).reduce((acc, toReplace) => {\n    return acc.replaceAll(toReplace, replacers[toReplace]);\n  }, ruleFile);\n};\n\nexport const convertPRContextFromBase64 = (prContext) => {\n  return {\n    ...prContext,\n    description: fromBase64String(prContext.description),\n    // deprecated\n    general_comments: prContext.general_comments?.map((generalComment) => ({\n      ...generalComment,\n      content: fromBase64String(generalComment.content),\n    })),\n    // deprecated\n    line_comments: prContext.line_comments?.map((lineComments) => ({\n      ...lineComments,\n      content: fromBase64String(lineComments.content),\n    })),\n    comments: prContext.comments?.map((comment) => ({\n      ...comment,\n      content: fromBase64String(comment.content),\n    })),\n    reviews: prContext.reviews?.map((comment) => ({\n      ...comment,\n      content: fromBase64String(comment.content),\n      conversations: comment.conversations?.map((conversation) => ({\n        ...conversation,\n        content: fromBase64String(conversation.content),\n      })),\n    })),\n    conversations: prContext.conversations?.map((comment) => ({\n      ...comment,\n      content: fromBase64String(comment.content),\n    })),\n  };\n};\n","// @ts-nocheck\nimport { debug } from '../../common/logger';\nimport { commitsDateByAuthor } from './contributersStat';\n\nexport const findGitAuthorsWithFallback = (context, gitToProviderUser) => {\n  const fullGitName = context.branch.author;\n  let authorResult = { author: fullGitName, prevResults: [] };\n  try {\n    if (!Object.keys(context.repo.contributors).includes(fullGitName)) {\n      const gitNames = Object.keys(gitToProviderUser).filter(\n        (gitUser) => gitToProviderUser[gitUser] === context.pr.author\n      );\n      gitNames.forEach((contributor) => {\n        const authorDates = commitsDateByAuthor(\n          contributor,\n          context.branch.base\n        );\n        if (authorDates.length === 1) {\n          authorResult = { author: contributor, prevResults: authorDates };\n        }\n        if (\n          gitNames.length > 1 &&\n          authorResult.prevResults.length <= authorDates.length\n        ) {\n          authorResult = { author: contributor, prevResults: authorDates };\n        }\n      });\n    }\n    return authorResult;\n  } catch (error) {\n    debug(`Failed getting the right author. Error: ${error}`);\n    return {};\n  }\n};\n","// @ts-nocheck\nimport parse from 'parse-diff';\nimport {\n  DEBUG_MODE,\n  ERRORS,\n  IGNORE_PATTERNS_IN_DRY_RUN,\n  NOT_FOUND_FILE_PATH,\n  STATUS_CODES,\n} from '../common/const';\nimport { debug, prepareSendingLogsToDD } from '../common/logger';\nimport {\n  getCommitsNumberOnBranch,\n  getContributorsStatistics,\n  getDiff,\n  getContent,\n  getCheckoutCommit,\n  getAuthorName,\n} from './git.service';\nimport * as yaml from 'js-yaml';\nimport {\n  blameByAuthor,\n  commitsDateByAuthor,\n  getRepoFirstCommitDate,\n  recentAuthorActivity,\n} from './git/contributersStat';\nimport { matchContributors } from './matchContributors';\nimport { handleValidationErrors } from './error.handler';\nimport { convertPRContextFromBase64, toBase64String } from './converters';\nimport { ACTIVITY_SINCE } from './git/const';\nimport {\n  formatDateToDays,\n  reportGitCommandsAndResults,\n  splitDsAndActivity,\n  splitDsAndBlameObjects,\n} from './git/contributorsStatHelper';\nimport { findGitAuthorsWithFallback } from './git/diffParserHelper';\n\nconst filteredOutCMFilesFunc = ({ to }) =>\n  IGNORE_PATTERNS_IN_DRY_RUN.every((ignorePattern) => !to.match(ignorePattern));\n\nconst formatFilesToSourceFiles = (baseBranch, refBranch, files) =>\n  files.map(({ from, to, chunks }) => ({\n    original_file: from === NOT_FOUND_FILE_PATH ? '' : from,\n    new_file: to,\n    diff: chunks.reduce((acc, { changes, content }) => {\n      return (\n        acc + content + '\\n' + changes.map(({ content }) => content).join('\\n')\n      );\n    }, ''),\n    original_content: getContent(\n      getCheckoutCommit(refBranch, baseBranch),\n      from\n    ),\n    new_content: getContent(refBranch, to),\n  }));\n\nconst extractMetadataFromFiles = (files) =>\n  files.map(({ to, from, deletions, additions }) => ({\n    original_file: from === NOT_FOUND_FILE_PATH ? '' : from,\n    new_file: to,\n    file: to !== NOT_FOUND_FILE_PATH ? to : from,\n    deletions,\n    additions,\n  }));\n\nconst getDiffSize = (files) =>\n  files?.reduce(\n    (acc, { additions, deletions }) => acc + additions + deletions,\n    0\n  ) || 0;\n\nexport const parseCMFile = async (payload, rules, ruleFile) => {\n  try {\n    const rulesObj = yaml.load(\n      rules.replaceAll(/{{(.*?)}}|{(.*?)}|{%.*%}((.|\\n)*){% endfor %}/g, '')\n    );\n    debug(`cm parse result: ${JSON.stringify(rulesObj)}`);\n    return rulesObj;\n  } catch (error) {\n    const { owner, repo, pullRequestNumber } = payload;\n    await prepareSendingLogsToDD(\n      'error',\n      `${ERRORS.FAILED_TO_PARSE_CM} in pr ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { error: error?.message, rules, ruleFile },\n      true\n    );\n    console.error(ERRORS.FAILED_PARSE_CM_FILE);\n    await handleValidationErrors(\n      error?.message,\n      STATUS_CODES.SYNTAX_ERROR,\n      payload,\n      ruleFile\n    );\n  }\n};\n\nexport const contributersStatContext = async (context, payload) => {\n  try {\n    const blames = blameByAuthor(context.files, context.branch.base);\n    const { formattedBlame, dsBlame } = splitDsAndBlameObjects(blames);\n    const age = await formatDateToDays(\n      getRepoFirstCommitDate(context.branch.base),\n      context,\n      payload\n    );\n    const author_age = await formatDateToDays(\n      commitsDateByAuthor(context.branch.author, context.branch.base)?.[0],\n      context,\n      payload\n    );\n    return {\n      age,\n      author_age,\n      blame: formattedBlame,\n      ds_blame: dsBlame,\n    };\n  } catch (error) {\n    debug(`Error extracting blame: ${error.message}`);\n    await handleValidationErrors(\n      ERRORS.FAILED_TO_GET_CONTEXT,\n      STATUS_CODES.FAILED_TO_GET_CONTEXT,\n      payload\n    );\n  }\n};\n\nconst contributersActivityContext = async (context) => {\n  try {\n    const gitActivity = context.files.reduce((acc, file) => {\n      if (file === NOT_FOUND_FILE_PATH) {\n        return acc;\n      }\n      const { dsActivity, groupByWeek } = recentAuthorActivity(\n        context.branch.base,\n        ACTIVITY_SINCE,\n        file\n      );\n      return {\n        ...acc,\n        [file]: { ...groupByWeek, dsActivity },\n      };\n    }, {});\n\n    const { formattedActivity, dsActivity } = splitDsAndActivity(gitActivity);\n    return {\n      git_activity: formattedActivity,\n      ds_activity: dsActivity,\n    };\n  } catch (error) {\n    debug(`Error extrating activity: ${error.message}`);\n    await handleValidationErrors(\n      ERRORS.FAILED_TO_GET_CONTEXT,\n      STATUS_CODES.FAILED_TO_GET_CONTEXT,\n      context.payload\n    );\n  }\n};\n\nconst filterOutFiles = async (diff, isCmChanged, diffCommand, payload) => {\n  const { owner, repo, pullRequestNumber } = payload;\n  let files = parse(diff);\n  if (isCmChanged) {\n    files = files?.filter(filteredOutCMFilesFunc);\n  }\n  if (!files?.length) {\n    await prepareSendingLogsToDD(\n      'warn',\n      `No files changed in rules-engine context for pr: ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { diff, diffCommand },\n      isCmChanged\n    );\n  }\n  return files;\n};\n\nconst getTheRightGitAuthor = (context, gitToProviderUser) => {\n  try {\n    const fallbacks = findGitAuthorsWithFallback(context, gitToProviderUser);\n    if (Object.keys(fallbacks).length) {\n      const gitName = `${fallbacks.author.split('<')[0].replace(/\\s*$/, '')}\\n`;\n      const gitEmail = `<${fallbacks.author.split('<')[1]}`;\n      return { gitName, gitEmail, fullName: fallbacks.author };\n    }\n    return fallbacks;\n  } catch (error) {\n    debug(`Failed getting the right author. Error: ${error}`);\n    return {};\n  }\n};\n\nexport const getContext = async (\n  baseBranch,\n  refBranch,\n  payload,\n  rules,\n  ruleFile,\n  isCmChanged = false\n) => {\n  const { owner, repo, pullRequestNumber } = payload;\n  try {\n    const rulesObj = await parseCMFile(payload, rules, ruleFile);\n    const { diff, diffCommand } = getDiff(baseBranch, refBranch, rulesObj);\n    let files = await filterOutFiles(diff, isCmChanged, diffCommand, payload);\n    const commitsNumber = getCommitsNumberOnBranch(baseBranch);\n    const contributors = getContributorsStatistics(baseBranch);\n    const { fullAuthorName, authorName, authorEmail } = getAuthorName(\n      baseBranch,\n      refBranch\n    );\n    const context = {\n      branch: {\n        name: refBranch,\n        base: baseBranch,\n        author: fullAuthorName,\n        autor_name: authorName,\n        author_email: authorEmail,\n        diff: {\n          size: getDiffSize(files),\n          files_metadata: extractMetadataFromFiles(files),\n        },\n        num_of_commits: commitsNumber,\n      },\n      source: {\n        diff: {\n          files: formatFilesToSourceFiles(baseBranch, refBranch, files),\n        },\n      },\n      repo: {\n        name: repo,\n        contributors,\n        owner,\n      },\n      files: files.map(({ to }) => to),\n      pr: convertPRContextFromBase64(payload.prContext),\n    };\n    const contributorsMap = await matchContributors(\n      context.pr.contributors,\n      context.repo.contributors,\n      payload,\n      rulesObj\n    );\n\n    const gitAuthor = getTheRightGitAuthor(context, contributorsMap);\n    if (Object.keys(gitAuthor).length) {\n      context.branch.author = gitAuthor.fullName;\n      context.branch.author_name = gitAuthor.gitName;\n      context.branch.author_email = gitAuthor.gitEmail;\n    }\n\n    debug(`context.branch: ${JSON.stringify(context.branch, null, 2)}`);\n    const contributorsStats = await contributersStatContext(context, payload);\n    const contributorsActivity = await contributersActivityContext(context);\n\n    context.repo = {\n      ...context.repo,\n      provider: payload.source,\n      git_to_provider_user: contributorsMap,\n      ...contributorsStats,\n      ...contributorsActivity,\n      pr_author: context.pr.author,\n    };\n\n    debug(`context.repo: ${JSON.stringify(context.repo, null, 2)}`);\n    if (DEBUG_MODE) {\n      for (const file of context.files) {\n        await reportGitCommandsAndResults(file, baseBranch, payload);\n      }\n    }\n    const reducedContext = toBase64String(\n      JSON.stringify({\n        context: {\n          repo: context.repo,\n          files: context.files,\n          branch: context.branch,\n          pr: { contributors: context.pr?.contributors },\n        },\n      })\n    );\n    await prepareSendingLogsToDD(\n      'info',\n      `rules-engine context for pr: ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { reducedContext, diffCommand },\n      DEBUG_MODE\n    );\n    return context;\n  } catch (error) {\n    //TODO: remove console\n    console.log({ error });\n    await prepareSendingLogsToDD(\n      'error',\n      ERRORS.FAILED_TO_GET_CONTEXT,\n      payload,\n      { error: error?.message, ruleFile },\n      true\n    );\n    await handleValidationErrors(\n      ERRORS.FAILED_TO_GET_CONTEXT,\n      STATUS_CODES.FAILED_TO_GET_CONTEXT,\n      payload,\n      ruleFile\n    );\n  }\n};\n","// @ts-nocheck\nimport { execSync } from 'child_process';\nimport { readFileSync } from 'fs';\nimport {\n  ERRORS,\n  NOT_FOUND_FILE_PATH,\n  ORG_LEVEL_REPO,\n  STATUS_CODES,\n} from '../common/const';\nimport { debug } from '../common/logger';\nimport { parseCMFile } from './diffParser';\nimport { handleValidationErrors } from './error.handler';\nimport { GIT_ERROR_TYPE, REPO_FOLDER } from './git/const';\n\nexport const SOURCE_CODE_WORKING_DIRECTORY = './code';\nexport const CWD = { cwd: SOURCE_CODE_WORKING_DIRECTORY };\n\nexport const executeGitCommand = (command, folder = REPO_FOLDER.DEFAULT) => {\n  debug(`Execute: ${command}`);\n  try {\n    const cdCommand = `cd ${folder} && `;\n    const gitResult = execSync(cdCommand + command, {\n      ...CWD,\n      maxBuffer: 500 * 1024 * 1024,\n    }).toString();\n    return gitResult;\n  } catch (e) {\n    debug(`${ERRORS.GIT_COMMAND_FAILED} ${e?.message || 'unknown error'}`);\n    if ((e?.toString() || '').includes(GIT_ERROR_TYPE.BAD_REVISION)) {\n      handleValidationErrors(\n        `${ERRORS.GIT_COMMAND_FAILED} ${e?.message || 'unknown error'}`,\n        STATUS_CODES.BAD_REVISION\n      );\n    }\n    throw e;\n  }\n};\n\nexport const getCheckoutCommit = (refBranch, baseBranch) => {\n  try {\n    const checkoutCommit = executeGitCommand(\n      `git rev-list --boundary '${refBranch}'...'${baseBranch}' | grep \"^-\" | cut -c2- | tail -1`\n    );\n    return checkoutCommit.trim() || baseBranch;\n  } catch (e) {\n    return baseBranch;\n  }\n};\n\nexport const getContent = (branch, file) => {\n  try {\n    if (file === NOT_FOUND_FILE_PATH) {\n      return '';\n    }\n    const fileContent = executeGitCommand(\n      `git show '${branch.trim()}':'${file.trim()}'`\n    );\n    return fileContent;\n  } catch (e) {\n    return '';\n  }\n};\n\nexport const getDiff = (baseBranch, refBranch, rules) => {\n  try {\n    const ignoreFiles = rules?.config?.ignore_files\n      ?.map((file) => `':(exclude)${file}'`)\n      ?.join(' ');\n    const diffCommand = `git diff '${baseBranch}'...'${refBranch}' ${\n      ignoreFiles ? ignoreFiles : ''\n    }`;\n    const diff = executeGitCommand(diffCommand);\n    debug({\n      diff,\n      logs: executeGitCommand(`git log`),\n      currBranch: executeGitCommand(`git branch --show-current`),\n    });\n    return { diff, diffCommand };\n  } catch (e) {\n    console.log(`error getting diff: ${e}`);\n    return '';\n  }\n};\n\nexport const readRemoteFile = (file, branch, folder = REPO_FOLDER.DEFAULT) => {\n  executeGitCommand(`git config --global --add safe.directory '*'`);\n  try {\n    if (folder === REPO_FOLDER.DEFAULT) {\n      executeGitCommand(`git show '${branch}':'${file}' > '${file}'`);\n    }\n    return readFileSync(\n      `${SOURCE_CODE_WORKING_DIRECTORY}/${folder}/${file}`,\n      'utf8'\n    );\n  } catch {\n    return '';\n  }\n};\n\nconst getCMFilesList = (baseBranch, repo) => {\n  executeGitCommand(`git checkout '${baseBranch}'`);\n  const cmFiles =\n    repo?.toLowerCase() === ORG_LEVEL_REPO\n      ? executeGitCommand(`git ls-files '*.cm'`)\n      : executeGitCommand(`git ls-files '.cm/*.cm'`);\n\n  executeGitCommand(`git checkout -`);\n  return cmFiles.split('\\n').filter(Boolean);\n};\n\nexport const getExcludedOrgCMFilesBasedOnRepo = async (\n  orgRules,\n  repo,\n  payload\n) => {\n  const excludedRulesFiles = [];\n  for (const ruleFile of Object.keys(orgRules)) {\n    const rulesObj = await parseCMFile(payload, orgRules[ruleFile], ruleFile);\n    const excludedRepos = rulesObj?.config?.ignore_repositories || [];\n    if (excludedRepos.includes(repo)) {\n      excludedRulesFiles.push(ruleFile);\n    }\n  }\n  return excludedRulesFiles;\n};\n\nexport const getOrgCmFiles = (baseBranch) => {\n  executeGitCommand(`git checkout ${baseBranch}`, REPO_FOLDER.CM);\n  const cmFiles = executeGitCommand(`git ls-files '*.cm'`, REPO_FOLDER.CM);\n  executeGitCommand(`git checkout -`, REPO_FOLDER.CM);\n  const orgCmFiles = cmFiles.split('\\n').filter(Boolean);\n  if (Object.keys(orgCmFiles).length) {\n    return orgCmFiles.reduce(\n      (acc, cmFile) => ({\n        ...acc,\n        [cmFile]: readRemoteFile(cmFile, baseBranch, REPO_FOLDER.CM),\n      }),\n      {}\n    );\n  }\n\n  return [];\n};\n\nexport const getRuleFiles = async (baseBranch, repo) => {\n  const cmFiles = getCMFilesList(baseBranch, repo);\n  if (Object.keys(cmFiles).length > 0) {\n    const ruleFiles = cmFiles.reduce(\n      (acc, cmFile) => ({\n        ...acc,\n        [cmFile]: readRemoteFile(cmFile, baseBranch),\n      }),\n      {}\n    );\n    return ruleFiles;\n  }\n  return {};\n};\n\nexport const getCommitsNumberOnBranch = (baseBranch) => {\n  return Number(\n    executeGitCommand(`git rev-list --count HEAD ^${baseBranch}`).trim()\n  );\n};\n\nexport const getContributorsStatistics = (branch) => {\n  const contributorsString = executeGitCommand(\n    `git shortlog ${branch} -s -n -e`\n  );\n  return contributorsString.split('\\n').reduce((acc, contributorStats) => {\n    const [commits, contributor] = contributorStats.trim().split('\\t');\n\n    return {\n      ...acc,\n      ...(contributor && { [contributor]: parseInt(commits) }),\n    };\n  }, {});\n};\n\nexport const getAuthorName = (baseBranch, refBranch) => {\n  try {\n    const authorName = executeGitCommand(\n      `git log '${baseBranch}'..'${refBranch}' --format=\"%an\" | tail -1`\n    );\n    const authorEmail = executeGitCommand(\n      `git log '${baseBranch}'..'${refBranch}' --format=\"%ae\" | tail -1`\n    );\n    const fullAuthorName = `${authorName?.trim()} <${authorEmail?.trim()}>`;\n    debug({\n      fullAuthorName,\n      currBranch: executeGitCommand(`git branch --show-current`),\n    });\n    return { fullAuthorName, authorName, authorEmail };\n  } catch (e) {\n    console.log(`error getting branch author name: ${e}`);\n    return '';\n  }\n};\n\nexport const isCmChanged = (refBranch, baseBranch, repo) => {\n  executeGitCommand(`git config --global --add safe.directory '*'`);\n  if (repo?.toLowerCase() === ORG_LEVEL_REPO) {\n    return Boolean(\n      executeGitCommand(`git diff '${baseBranch}'...'${refBranch}' -- *.cm`)\n    );\n  }\n  return Boolean(\n    executeGitCommand(`git diff '${baseBranch}'...'${refBranch}' -- .cm/*.cm`)\n  );\n};\n\nexport const hasNonRuleFilesChanges = (refBranch, baseBranch, repo) => {\n  executeGitCommand(`git config --global --add safe.directory '*'`);\n  if (repo?.toLowerCase() === ORG_LEVEL_REPO) {\n    return Boolean(\n      executeGitCommand(`git diff '${baseBranch}'...'${refBranch}' -- ':!*.cm'`)\n    );\n  }\n  return Boolean(\n    executeGitCommand(\n      `git diff '${baseBranch}'...'${refBranch}' -- ':!.cm/*.cm'`\n    )\n  );\n};\n","// @ts-nocheck\nimport { readFileSync, writeFileSync } from 'fs';\nimport { SOURCE_CODE_WORKING_DIRECTORY } from './git.service';\nexport const saveResultsInCache = (results) => {\n  try {\n    writeFileSync(\n      `${SOURCE_CODE_WORKING_DIRECTORY}/cache.json`,\n      JSON.stringify(results)\n    );\n  } catch (e) {\n    console.log('error saving cache', e);\n  }\n};\n\nexport const loadCacheResults = () => {\n  try {\n    const cacheResults = readFileSync(\n      `${SOURCE_CODE_WORKING_DIRECTORY}/cache.json`\n    ).toString();\n    return JSON.parse(cacheResults);\n  } catch (e) {\n    console.warn('error loading from cache', e);\n    return {};\n  }\n};\n","// @ts-nocheck\nexport class ExpertReviewerContext {\n  constructor({ owner, repo, pullRequestNumber, branch, triggeredBy }) {\n    this.org = owner;\n    this.repo = repo;\n    this.pullRequestNumber = pullRequestNumber;\n    this.branch = branch;\n    this.triggeredBy = triggeredBy;\n  }\n  get() {\n    return {\n      org: this.org,\n      repo: this.repo,\n      pullRequestNumber: this.pullRequestNumber,\n      branch: this.branch,\n      triggeredBy: this.triggeredBy,\n    };\n  }\n}\n","// @ts-nocheck\n\nexport class ExpertReviewerRequest {\n  constructor(gitToProvider, prFiles, context) {\n    this.merge_dict = gitToProvider;\n    this.pr_files = prFiles;\n    this.context = context;\n  }\n  get() {\n    return {\n      merge_dict: this.merge_dict,\n      pr_files: this.pr_files,\n      context: this.context,\n    };\n  }\n}\n","// @ts-nocheck\n\nimport { NOT_FOUND_FILE_PATH } from '../common/const';\nimport { ExpertReviewerContext } from './requests/expertReviewerContext';\nimport { ExpertReviewerRequest } from './requests/expertReviewerRequest';\n\nconst buildPrFiles = (repo, files) => {\n  const tempPrFiles = files.reduce((acc, file) => {\n    if (file === NOT_FOUND_FILE_PATH) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [file]: {\n        ...{ blame: repo.ds_blame?.[file] || '' },\n        ...{ activity: repo.ds_activity?.[file] || '' },\n      },\n    };\n  }, {});\n  return Object.keys(tempPrFiles).reduce((acc, file) => {\n    if (!Object.keys(tempPrFiles[file]).length) {\n      return acc;\n    }\n    return { ...acc, [file]: tempPrFiles[file] };\n  }, {});\n};\n\nexport const getExpertReviewer = (repo, files, payload) => {\n  const context = new ExpertReviewerContext(payload).get();\n  const prFiles = buildPrFiles(repo, files);\n  return new ExpertReviewerRequest(\n    repo.git_to_provider_user,\n    prFiles,\n    context\n  ).get();\n};\n","// @ts-nocheck\nimport * as Amplitude from '@amplitude/node';\nimport { debug } from '../logger';\nimport { generatePrUrl } from './analytics.handler';\n\nconst FILTER_EVENT_TYPE = 'gitstream-filter-function';\n\nclass AmplitudeEvent {\n  constructor(\n    { owner, repo, pullRequestNumber, hasCmRepo },\n    filterName,\n    args,\n    context\n  ) {\n    this.filterName = filterName;\n    this.user_id = `${context.repo?.provider}/${owner}/${repo}/${pullRequestNumber}`;\n    this.args = args;\n    this.repo = `${context.repo?.provider}/${owner}/${repo}`;\n    this.author = `${context.repo?.provider}/${context.repo?.pr_author}`;\n    this.org = `${context.repo?.provider}/${owner}`;\n    this.pr_url = generatePrUrl(context, {\n      owner,\n      repo,\n      pullRequestNumber,\n    });\n    this.level = hasCmRepo ? 'Org' : 'Repo';\n  }\n  get() {\n    return {\n      event_type: FILTER_EVENT_TYPE,\n      user_id: this.user_id,\n      event_properties: {\n        filter_name: this.filterName,\n        args: this.args,\n        repo: this.repo,\n        author: this.author,\n        org: this.org,\n        pr_url: this.pr_url,\n        level: this.level,\n      },\n    };\n  }\n}\n\nlet client;\nconst initAmplitude = ({ analyticsHttpApiUrl, analyticsKey }) => {\n  client = Amplitude.init(analyticsKey, {\n    serverUrl: analyticsHttpApiUrl,\n  });\n};\n\nexport const sendAmplitudeEvent = async (payload, event, args, context) => {\n  if (!client) {\n    initAmplitude(payload);\n  }\n  try {\n    const ampEvent = new AmplitudeEvent(payload, event, args, context).get();\n    await client.logEvent(ampEvent);\n  } catch (e) {\n    debug(\n      `Sending event to amplitude failed with the following error ${JSON.stringify(\n        e\n      )}`\n    );\n  }\n};\n","import { SegmentClient } from '@linearb/linode-common';\nimport { prepareSendingLogsToDD } from '../logger';\nimport { generatePrUrl } from './analytics.handler';\n\nconst FILTER_EVENT_TYPE = 'action_filter';\n\nclass SegmentEvent {\n  filter_name: String;\n  user_id: String;\n  args: String;\n  repo: String;\n  provider: String;\n  author: String;\n  org: String;\n  pr_url: String;\n  is_org_level: String;\n  trigger_id: string;\n\n  constructor(\n    { owner, repo, pullRequestNumber, hasCmRepo, trigger_id }: any,\n    filterName: String,\n    args: any,\n    context: any\n  ) {\n    this.filter_name = filterName;\n    this.user_id = `${context.repo?.provider}-${context.repo?.pr_author}`;\n    this.args = args;\n    this.repo = repo;\n    this.author = context.repo?.pr_author;\n    this.org = owner;\n    this.provider = context.repo?.provider;\n    this.pr_url = generatePrUrl(context, {\n      owner,\n      repo,\n      pullRequestNumber,\n    });\n    this.is_org_level = hasCmRepo;\n    this.trigger_id = trigger_id;\n  }\n  get() {\n    return {\n      userId: this.user_id,\n      event: FILTER_EVENT_TYPE,\n      properties: {\n        filter_name: this.filter_name,\n        args: this.args,\n        repo: this.repo,\n        author: this.author,\n        git_org_name: this.org,\n        git_provider: this.provider,\n        pr_url: this.pr_url,\n        is_org_level: this.is_org_level,\n        trigger_id: this.trigger_id,\n      },\n    };\n  }\n}\n\nexport const sendSegmentEvent = async (\n  payload: any,\n  filterName: String,\n  args: any,\n  context: any\n) => {\n  try {\n    const segment = new SegmentClient({\n      segmentServiceUrl: payload.segmentServiceUrl,\n      segment_write_key: payload.segmentWriteKey,\n    });\n    const segmentEvent = new SegmentEvent(\n      payload,\n      filterName,\n      args,\n      context\n    ).get();\n    await segment.track(segmentEvent);\n  } catch (error) {\n    console.error(`Unable to call segment`, error);\n    if (error instanceof Error) {\n      await prepareSendingLogsToDD(\n        'warn',\n        `Unable to call segment for pr ${payload?.owner}/${payload?.repo}/${payload?.pullRequestNumber}`,\n        payload,\n        { error: error?.message },\n        true\n      );\n    }\n  }\n};\n","import { GIT_PROVIDER } from '../const';\nimport { sendAmplitudeEvent } from './amplitude.service';\nimport { sendSegmentEvent } from './segment.service';\n\nexport const generatePrUrl = (\n  context: any,\n  { owner, repo, pullRequestNumber }: any\n): String => {\n  return context.repo?.provider === GIT_PROVIDER.GITHUB\n    ? `${GIT_PROVIDER.GITHUB}.com/${owner}/${repo}/pull/${pullRequestNumber}`\n    : `${GIT_PROVIDER.GITLAB}.com/${owner}/${repo}/-/merge_requests/${pullRequestNumber}`;\n};\n\nexport const filterAnalyticsHandler = async (\n  analytics: any,\n  payload: any,\n  context: any\n) => {\n  for (const filterName of Object.keys(analytics) || {}) {\n    await sendAmplitudeEvent(\n      payload,\n      filterName,\n      analytics[filterName].args,\n      context\n    );\n\n    await sendSegmentEvent(\n      payload,\n      filterName,\n      analytics[filterName].args,\n      context\n    );\n  }\n};\n","// @ts-nocheck\nimport * as yaml from 'js-yaml';\nimport { ERRORS, STATUS_CODES } from '../common/const';\nimport { handleValidationErrors } from './error.handler';\nimport {\n  SavedWordsValidator,\n  validatorsConstants,\n} from '@linearb/gitstream-core-js';\n\nconst COMMENT_REGEX = /^.*#.*$/gm;\nconst EMPTY_LINE_REGEX = /^\\s*\\n/gm;\nconst ACTIONS_LINE_REGEX = /-.*action( )*:.*/gi;\nconst ACTIONS_PREFIX_REGEX = /-.*action.*: /gi;\nconst AUTOMATION_KEYWORD = 'automations:';\nconst MALFORMED_EXPRESSION_REGEX = /{[\\s]+{|}[\\s]+}/gi;\n\nconst validateKeyword = async (rules, ruleFile, payload) => {\n  if (!rules.includes(AUTOMATION_KEYWORD)) {\n    await handleValidationErrors(\n      ERRORS.MISSING_KEYWORD,\n      STATUS_CODES.MISSING_KEYWORD,\n      payload,\n      ruleFile\n    );\n  }\n};\n\nconst validateActions = async (actions, ruleFile, payload) => {\n  const supportedActions = Object.values(\n    validatorsConstants.SUPPORTED_ACTIONS_BY_PROVIDER[payload.source] ||\n      validatorsConstants.SUPPORTED_ACTIONS_BY_PROVIDER.default\n  );\n  const notSupportedActions = actions.filter(\n    (action) => !supportedActions.includes(action)\n  );\n  if (notSupportedActions.length) {\n    await handleValidationErrors(\n      `The following actions are not supported: ${notSupportedActions\n        .map((action) => `\\`${action}\\``)\n        .join(\n          ', '\n        )} [Supported actions](https://docs.gitstream.cm/automation-actions/)`,\n      STATUS_CODES.UNSUPPORTED_ACTION,\n      payload,\n      ruleFile\n    );\n  }\n};\nconst validateExpressions = async (rules, ruleFile, payload) => {\n  if (rules.match(MALFORMED_EXPRESSION_REGEX)) {\n    await handleValidationErrors(\n      ERRORS.MALFORMED_EXPRESSION,\n      STATUS_CODES.MALFORMED_EXPRESSION,\n      payload,\n      ruleFile\n    );\n  }\n};\n\nconst validateRequiredArgs = async (runs, ruleFile, payload) => {\n  runs.forEach(async ({ action, args }) => {\n    const existingArgs = Object.keys(args || {});\n    const requiredArgsExists = (requireArg) =>\n      existingArgs.includes(requireArg);\n    if (!validatorsConstants.REQUIRED_ARGUMENTS_BY_ACTIONS[action]) {\n      return;\n    }\n    const missingArgs = validatorsConstants.REQUIRED_ARGUMENTS_BY_ACTIONS[\n      action\n    ].all\n      ? !validatorsConstants.REQUIRED_ARGUMENTS_BY_ACTIONS[action].args.every(\n          requiredArgsExists\n        )\n      : !validatorsConstants /\n        validatorsConstants.REQUIRED_ARGUMENTS_BY_ACTIONS[action].args.some(\n          requiredArgsExists\n        );\n    if (missingArgs) {\n      await handleValidationErrors(\n        `Missing required args for action: \\`${action}\\`: [${\n          validatorsConstants /\n          validatorsConstants.REQUIRED_ARGUMENTS_BY_ACTIONS[action].args\n            .filter((arg) => !existingArgs.includes(arg))\n            .map((arg) => `${arg}`)\n            .join(', ')\n        }]`,\n        STATUS_CODES.MISSING_REQUIRED_FIELDS,\n        payload,\n        ruleFile\n      );\n    }\n  });\n};\nconst validateSupportedArgs = async (runs, ruleFile, payload) =>\n  runs.forEach(async ({ action, args }) => {\n    const unsupportedArgs = Object.keys(args || {}).filter(\n      (arg) =>\n        !validatorsConstants.SUPPORTED_ARGUMENTS_BY_ACTION[action]?.includes(\n          arg\n        )\n    );\n    if (unsupportedArgs?.length) {\n      await handleValidationErrors(\n        `These arguments are not supported for \\`${action}\\`: [${unsupportedArgs\n          .map((arg) => `${arg}`)\n          .join(', ')}]`,\n        STATUS_CODES.UNSUPPORTED_ARGUMENT,\n        payload,\n        ruleFile\n      );\n    }\n  });\n\nconst validateArgs = async (rules, ruleFile, provider) => {\n  const rulesObj = yaml.load(\n    rules.replaceAll(/{{(.*?)}}|{(.*?)}|{%.*%}((.|\\n)*){% endfor %}/g, '')\n  );\n  const runs = Object.values(rulesObj.automations).flatMap(({ run }) => run);\n  await validateSupportedArgs(runs, ruleFile, provider);\n  await validateRequiredArgs(runs, ruleFile, provider);\n};\n\nconst validateSavedWords = async (rules, ruleFile, payload) => {\n  try {\n    new SavedWordsValidator().validate({ yamlFile: rules });\n  } catch (e) {\n    await handleValidationErrors(\n      e.message,\n      STATUS_CODES.SYNTAX_ERROR,\n      payload,\n      ruleFile\n    );\n  }\n};\n\nexport const validateRuleFile = async (rules, ruleFile, payload) => {\n  const rulesWithoutComments = rules\n    .replace(COMMENT_REGEX, '')\n    .replace(EMPTY_LINE_REGEX, '');\n  await validateKeyword(rulesWithoutComments, ruleFile, payload);\n  await validateExpressions(rulesWithoutComments, ruleFile, payload);\n  const actions = rulesWithoutComments\n    .match(ACTIONS_LINE_REGEX)\n    ?.map((action) => action.replace(ACTIONS_PREFIX_REGEX, '').trim());\n  await validateActions(actions, ruleFile, payload);\n  await validateArgs(rulesWithoutComments, ruleFile, payload);\n  await validateSavedWords(rules, ruleFile, payload);\n};\n","// @ts-nocheck\nimport { RuleParser } from '../../rules-parser/index';\nimport { getExpertReviewer } from '../api/getExpertReviewer';\nimport {\n  DEBUG_MODE,\n  ERRORS,\n  ORG_LEVEL_REPO,\n  RULES_PARSER_STATUS_CODES,\n  STATUS_CODES,\n  WATCH_FILTERS,\n  WATCH_PR_EVENTS,\n} from '../common/const';\nimport { debug, prepareSendingLogsToDD } from '../common/logger';\nimport { filterAnalyticsHandler } from '../common/notify/analytics.handler';\nimport {\n  convertPRContextFromBase64,\n  convertRuleFileToStringSafe,\n} from './converters';\nimport { getContext, parseCMFile } from './diffParser';\nimport { handleValidationErrors } from './error.handler';\nimport {\n  CWD,\n  getExcludedOrgCMFilesBasedOnRepo,\n  getOrgCmFiles,\n  getRuleFiles,\n  hasNonRuleFilesChanges,\n  isCmChanged,\n  readRemoteFile,\n} from './git.service';\nimport { MAIN_RULES_FILE, REPO_FOLDER } from './git/const';\nimport { validateRuleFile } from './ruleParser.validator';\nimport { rulesEngineErrors } from './types';\n\nexport const parseRules = async (rules, prContext, payload, ruleFile) => {\n  const { repo } = payload;\n  try {\n    await validateRuleFile(rules, ruleFile, payload);\n    const parser = new RuleParser(rules, prContext, DEBUG_MODE);\n    const results = await parser.parseStreams();\n    if (results.automations) {\n      const passedAutomationNames = Object.keys(results.automations).filter(\n        (automation) => results.automations[automation].passed\n      );\n      const totalAutomations = Object.keys(results?.automations).length;\n      await prepareSendingLogsToDD(\n        'info',\n        `${passedAutomationNames.length} out of ${totalAutomations} automations have passed for repo ${repo}`,\n        payload,\n        {\n          passedAutomations: passedAutomationNames.length,\n          passedAutomationNames,\n          totalAutomations,\n        }\n      );\n    }\n    return results;\n  } catch (error) {\n    const { owner, repo, pullRequestNumber } = payload;\n    debug(`error in parseRules: ${error}`);\n    await prepareSendingLogsToDD(\n      'error',\n      `${ERRORS.FAILED_TO_PARSE_CM} in pr ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { error: error?.message, rules, ruleFile }\n    );\n    await handleValidationErrors(\n      error?.message,\n      STATUS_CODES.SYNTAX_ERROR,\n      payload,\n      ruleFile\n    );\n  }\n};\n\nconst removeDSObjects = (context) => {\n  const { ds_blame, ds_activity, ...repo } = context.repo || {};\n  return { ...context, repo };\n};\n\nexport const executeOneRuleFile = async ({\n  ruleFileContent,\n  payload,\n  baseBranch,\n  refBranch,\n  ruleFile = 'playground.cm',\n  cloneRepoPath,\n}) => {\n  CWD.cwd = cloneRepoPath;\n  let context;\n\n  const tempContext = await getContext(\n    baseBranch,\n    refBranch,\n    payload,\n    ruleFileContent,\n    ruleFile,\n    isCmChanged\n  );\n  const expertRequest = getExpertReviewer(\n    tempContext.repo,\n    tempContext.files,\n    payload\n  );\n  debug(\n    `expertRequest for cm file: ${ruleFile}: ${JSON.stringify(\n      expertRequest,\n      null,\n      2\n    )}`\n  );\n  context = removeDSObjects(tempContext);\n  context.repo = {\n    ...context.repo,\n    data_service: { expert_reviwer_request: expertRequest },\n  };\n  const stringSafeRuleFile = convertRuleFileToStringSafe(ruleFileContent);\n  const results = await parseRules(\n    stringSafeRuleFile,\n    context,\n    payload,\n    ruleFile\n  );\n  return { results, context, errors: rulesEngineErrors };\n};\n\nexport const executeCached = async ({\n  ruleFileContent,\n  payload,\n  ruleFile = 'playground.cm',\n  cachedContext,\n}) => {\n  const stringSafeRuleFile = convertRuleFileToStringSafe(ruleFileContent);\n  const results = await parseRules(\n    stringSafeRuleFile,\n    cachedContext,\n    payload,\n    ruleFile\n  );\n  return { results, context: cachedContext, errors: rulesEngineErrors };\n};\n\nconst parseRulesParserErrors = async (\n  results,\n  ruleFile,\n  stringSafeRuleFile,\n  payload\n) => {\n  const { owner, repo, pullRequestNumber } = payload;\n  try {\n    const validatorErrors = results?.validatorErrors;\n    const parserErrors = results?.errors;\n    //If VALIDATOR error - send to DD only, other errors - fail gitstream\n    if (Object.keys(validatorErrors || {}).length) {\n      for (const validator of Object.keys(validatorErrors)) {\n        debug(\n          `${ERRORS.VALIDATOR_ERROR} - ${validator}: ${validatorErrors[validator]}`\n        );\n        await prepareSendingLogsToDD(\n          'warn',\n          `${ERRORS.VALIDATOR_ERROR} - ${validator} in pr ${owner}/${repo}/${pullRequestNumber}`,\n          payload,\n          {\n            error: `${validatorErrors[validator]}`,\n            ruleFile,\n            cmContent: stringSafeRuleFile,\n          },\n          true\n        );\n      }\n    }\n    if (Object.keys(parserErrors || {}).length) {\n      for (const statusCode of Object.keys(parserErrors)) {\n        debug(`Error: ${parserErrors[statusCode]}`);\n        await handleValidationErrors(\n          parserErrors[statusCode],\n          statusCode,\n          payload,\n          ruleFile\n        );\n      }\n      return true;\n    }\n  } catch (error) {\n    debug(`Error in parseRulesParserErrors ${error?.message}`);\n    await prepareSendingLogsToDD(\n      'warn',\n      `${ERRORS.FAILED_PARSE_RULES_PARSER_ERRORS} in pr ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { error: `${error?.message}`, ruleFile },\n      true\n    );\n    await handleValidationErrors(\n      `${ERRORS.FAILED_PARSE_RULES_PARSER_ERRORS}: ${error?.message}`,\n      STATUS_CODES.FAILED_PARSE_RULES_PARSER_ERRORS,\n      payload,\n      ruleFile\n    );\n    return true;\n  }\n};\n\nexport const parseMultipleRuleFiles = async (\n  rules,\n  baseBranch,\n  refBranch,\n  payload,\n  isCmChanged,\n  cache = null\n) => {\n  let combinedResults = {};\n  const contextPerRuleFile = {};\n  for (const ruleFile of Object.keys(rules)) {\n    try {\n      let context;\n      if (cache) {\n        context = {\n          ...cache[ruleFile],\n          pr: convertPRContextFromBase64(payload.prContext),\n        };\n      } else {\n        const tempContext = await getContext(\n          baseBranch,\n          refBranch,\n          payload,\n          rules[ruleFile],\n          ruleFile,\n          isCmChanged\n        );\n        const expertRequest = getExpertReviewer(\n          tempContext.repo,\n          tempContext.files,\n          payload\n        );\n        debug(\n          `expertRequest for cm file: ${ruleFile}: ${JSON.stringify(\n            expertRequest,\n            null,\n            2\n          )}`\n        );\n\n        context = removeDSObjects(tempContext);\n        context.repo = {\n          ...context.repo,\n          data_service: { expert_reviwer_request: expertRequest },\n        };\n      }\n      context.env = process.env;\n      contextPerRuleFile[ruleFile] = context;\n      const stringSafeRuleFile = convertRuleFileToStringSafe(rules[ruleFile]);\n      const results = await parseRules(\n        stringSafeRuleFile,\n        context,\n        payload,\n        `${ruleFile}`\n      );\n      const breakGitstream = await parseRulesParserErrors(\n        results,\n        ruleFile,\n        stringSafeRuleFile,\n        payload\n      );\n      if (breakGitstream) {\n        return {};\n      }\n      await filterAnalyticsHandler(results.analytics, payload, context);\n      combinedResults = Object.keys(results.automations).reduce(\n        (acc, automation) => {\n          const ruleFileName =\n            ruleFile?.replace('.cm/', '')?.replace('.cm', '') || ruleFile;\n          const isOrgLevel = !ruleFile?.includes('.cm/');\n          return {\n            ...acc,\n            [`${ruleFileName}/${automation}`]: {\n              ...results.automations[automation],\n              is_org_level: isOrgLevel,\n              provider_repository_id: isOrgLevel\n                ? payload.cmRepoId\n                : payload.providerRepoId,\n            },\n          };\n        },\n        combinedResults\n      );\n    } catch (error) {\n      debug(`parseMultipleRuleFiles error: ${error.message}`);\n      const { owner, repo, pullRequestNumber } = payload;\n      await prepareSendingLogsToDD(\n        'error',\n        `${ERRORS.FAILED_TO_PARSE_CM} in pr ${owner}/${repo}/${pullRequestNumber}`,\n        payload,\n        {\n          error: error?.message,\n          rules,\n          ruleFile,\n        }\n      );\n      await handleValidationErrors(\n        ERRORS.FAILED_TO_PARSE_CM,\n        STATUS_CODES.FAILED_TO_PARSE_CM,\n        payload,\n        ruleFile\n      );\n    }\n  }\n  return { automations: combinedResults, contextPerFile: contextPerRuleFile };\n};\n\nexport const extractAdmins = async (\n  baseBranch,\n  isCmRepoFullyInstalled,\n  payload\n) => {\n  try {\n    const { cmRepoRef, repo } = payload;\n    const repoCmFile =\n      repo?.toLowerCase() === ORG_LEVEL_REPO ? '' : '.cm/' + MAIN_RULES_FILE;\n    const rules = readRemoteFile(repoCmFile, baseBranch);\n    const rulesObj = await parseCMFile(payload, rules, repoCmFile);\n    let admins = rulesObj?.config?.admin?.users || [];\n\n    if (isCmRepoFullyInstalled) {\n      const OrgLevelRules = readRemoteFile(\n        MAIN_RULES_FILE,\n        cmRepoRef,\n        REPO_FOLDER.CM\n      );\n      const orgRulesObj = await parseCMFile(\n        payload,\n        OrgLevelRules,\n        MAIN_RULES_FILE\n      );\n\n      admins = admins.concat(orgRulesObj?.config?.admin?.users || []);\n    }\n    const adminArray = Array.from(new Set(admins));\n    return adminArray;\n  } catch (e) {\n    const { owner, repo, pullRequestNumber } = payload;\n    await prepareSendingLogsToDD(\n      'warn',\n      `${ERRORS.FAILED_TO_EXTRACT_ADMINS} in pr ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { error: e?.message },\n      true\n    );\n    console.warn(ERRORS.FAILED_TO_EXTRACT_ADMINS);\n    return [];\n  }\n};\n\nexport const getCMChanged = (refBranch, baseBranch, repo) => {\n  const cmChanged = isCmChanged(refBranch, baseBranch, repo);\n  const isDryRun =\n    cmChanged && hasNonRuleFilesChanges(refBranch, baseBranch, repo);\n  return { cmChanged, isDryRun };\n};\n\nconst getRules = async (\n  cmChanged,\n  refBranch,\n  baseBranch,\n  payload,\n  isCmRepoFullyInstalled\n) => {\n  // In case there are changes in the cm then get the cm from the local branch\n  try {\n    const { repo, cmRepoRef } = payload;\n    let rules = await getRuleFiles(cmChanged ? refBranch : baseBranch, repo);\n    //If the user has org level then get the rules also from the cm repo\n    if (isCmRepoFullyInstalled && repo?.toLowerCase() !== ORG_LEVEL_REPO) {\n      const orgRules = getOrgCmFiles(cmRepoRef);\n      const orgRulesToExclude = await getExcludedOrgCMFilesBasedOnRepo(\n        orgRules,\n        repo,\n        payload\n      );\n      for (const ruleFile of orgRulesToExclude) {\n        delete orgRules[ruleFile];\n      }\n      rules = { ...orgRules, ...rules };\n    }\n    return rules;\n  } catch (error) {\n    debug(error.message);\n    return {};\n  }\n};\n\nexport const getRulesAndValidate = async (\n  cmChanged,\n  refBranch,\n  baseBranch,\n  payload,\n  isCmRepoFullyInstalled\n) => {\n  const rules = await getRules(\n    cmChanged,\n    refBranch,\n    baseBranch,\n    payload,\n    isCmRepoFullyInstalled\n  );\n  if (!Object.keys(rules).length) {\n    await prepareSendingLogsToDD(\n      'warn',\n      ERRORS.RULE_FILE_NOT_FOUND,\n      payload,\n      { error: ERRORS.RULE_FILE_NOT_FOUND },\n      true\n    );\n    await handleValidationErrors(\n      ERRORS.RULE_FILE_NOT_FOUND,\n      STATUS_CODES.RULE_FILE_NOT_FOUND,\n      payload\n    );\n  }\n  return rules;\n};\n\nconst getPREventsInRuleFile = (rules, file) => {\n  return Object.values(WATCH_PR_EVENTS).reduce((ac, event) => {\n    if (rules[file].includes(`pr.${event}`)) {\n      return { ...ac, [event]: true };\n    }\n    return ac;\n  }, {});\n};\n\nconst getFiltersInRuleFile = (rules, file) => {\n  return Object.keys(WATCH_FILTERS).reduce((ac, filter) => {\n    if (WATCH_FILTERS[filter].test(rules[file])) {\n      return { ...ac, [filter]: true };\n    }\n    return ac;\n  }, {});\n};\n\nexport const getWatchers = async (rules, payload): any => {\n  try {\n    const watchers = Object.keys(rules).reduce((acc, file) => {\n      const events = getPREventsInRuleFile(rules, file);\n      const filters = getFiltersInRuleFile(rules, file);\n      return {\n        events: { ...acc?.events, ...events },\n        filters: { ...acc?.filters, ...filters },\n      };\n    }, {});\n    return watchers;\n  } catch (error) {\n    const { owner, repo, pullRequestNumber } = payload;\n    await prepareSendingLogsToDD(\n      'warn',\n      `${ERRORS.FAILED_TO_GET_WATCHERS} in pr ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      { error: error?.message },\n      true\n    );\n    await handleValidationErrors(\n      ERRORS.FAILED_TO_GET_WATCHERS,\n      STATUS_CODES.FAILED_TO_GET_WATCHERS,\n      payload\n    );\n  }\n};\n\nexport const executeParser = async ({ context, ruleFileContent, payload }) => {\n  const ruleFile = 'playground.cm';\n  const stringSafeRuleFile = convertRuleFileToStringSafe(ruleFileContent);\n  const results = await parseRules(\n    stringSafeRuleFile,\n    context,\n    payload,\n    ruleFile\n  );\n  return { results, errors: rulesEngineErrors };\n};\n","// @ts-nocheck\nimport axios from 'axios';\nimport {\n  ERRORS,\n  RESOLVER_TOKEN,\n  RULES_RESOLVER_URL,\n  STATUS_CODES,\n  USE_CACHE,\n} from '../common/const';\nimport { prepareSendingLogsToDD } from '../common/logger';\nimport { loadCacheResults } from './cache';\nimport { handleValidationErrors } from './error.handler';\nimport { executeGitCommand } from './git.service';\nimport { REPO_FOLDER } from './git/const';\nimport { extractAdmins, getCMChanged, getRulesAndValidate } from './ruleParser';\n\nexport const validateDefaultFolder = () => {\n  try {\n    executeGitCommand(`git config --global --add safe.directory '*'`);\n    return true;\n  } catch (e) {\n    REPO_FOLDER.DEFAULT = '.';\n    return false;\n  }\n};\n\nexport const calculateRunData = async (\n  payload,\n  refBranch,\n  baseBranch,\n  isCmRepoFullyInstalled\n) => {\n  const { repo } = payload;\n  const cmState = getCMChanged(refBranch, baseBranch, repo);\n  const rules = await getRulesAndValidate(\n    cmState.cmChanged,\n    refBranch,\n    baseBranch,\n    payload,\n    isCmRepoFullyInstalled\n  );\n  const admins = await extractAdmins(\n    baseBranch,\n    isCmRepoFullyInstalled,\n    payload\n  );\n  return { cmState, rules, admins, cache: {} };\n};\n\nexport const loadRunData = async (\n  payload,\n  refBranch,\n  baseBranch,\n  isCmRepoFullyInstalled\n): any => {\n  if (USE_CACHE) {\n    const cache = loadCacheResults();\n    if (!Object.keys(cache)) {\n      return await handleValidationErrors(\n        ERRORS.INVALID_CACHE,\n        STATUS_CODES.INVALID_CACHE,\n        {}\n      );\n    }\n    const rules = cache.rules;\n    const admins = cache.admins;\n    const cmState = cache.cmState;\n    return { cache, rules, admins, cmState };\n  }\n  const { rules, admins, cmState, cache } = await calculateRunData(\n    payload,\n    refBranch,\n    baseBranch,\n    isCmRepoFullyInstalled\n  );\n  return { rules, admins, cmState, cache };\n};\n\nexport const sendResultsToResolver = async (body, payload, automations) => {\n  try {\n    await axios.post(RULES_RESOLVER_URL, JSON.stringify(body), {\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': RESOLVER_TOKEN,\n      },\n    });\n\n    await prepareSendingLogsToDD(\n      'info',\n      ERRORS.SEND_RESULTS_TO_RESOLVER_SUCCEEDED,\n      payload\n    );\n\n    console.log({ parserResults: JSON.stringify(automations) });\n  } catch (error) {\n    await prepareSendingLogsToDD(\n      'error',\n      ERRORS.SEND_RESULTS_TO_RESOLVER_FAILED,\n      payload,\n      {\n        error: error?.message,\n        body,\n      }\n    );\n    console.error(ERRORS.SEND_RESULTS_TO_RESOLVER_FAILED, { error });\n    await handleValidationErrors(\n      error?.message,\n      STATUS_CODES.SEND_RESULTS_TO_RESOLVER_FAILED,\n      payload\n    );\n  }\n};\n","import {\n  BASE_REF,\n  CLIENT_PAYLOAD,\n  ERRORS,\n  HEAD_REF,\n  STATUS_CODES,\n} from './common/const';\nimport { prepareSendingLogsToDD } from './common/logger';\nimport { attachAdditionalContextByProvider } from './providers';\nimport { saveResultsInCache } from './utils/cache';\nimport { handleValidationErrors } from './utils/error.handler';\nimport { getWatchers, parseMultipleRuleFiles } from './utils/ruleParser';\nimport {\n  loadRunData,\n  sendResultsToResolver,\n  validateDefaultFolder,\n} from './utils/run';\n\nexport const runCI = async () => {\n  const refBranch = (HEAD_REF || '').trim();\n  const baseBranch = (BASE_REF || '').trim();\n  const payload =\n    typeof JSON.parse(CLIENT_PAYLOAD) === 'string'\n      ? JSON.parse(JSON.parse(CLIENT_PAYLOAD))\n      : JSON.parse(CLIENT_PAYLOAD);\n\n  try {\n    const { repo, owner, pullRequestNumber, headSha, hasCmRepo } = payload;\n    //Check if the user has a cm repo (in gitlab the repo should also have a rules file) and the yml supports org level.\n    const isCmRepoFullyInstalled = validateDefaultFolder() && hasCmRepo;\n    console.log(\n      `PR: ${owner}/${repo}/pull/${pullRequestNumber}\\ncommit: ${headSha}`\n    );\n    const { rules, admins, cmState, cache } = await loadRunData(\n      payload,\n      refBranch,\n      baseBranch,\n      isCmRepoFullyInstalled\n    );\n    const { automations, contextPerFile } = await parseMultipleRuleFiles(\n      rules,\n      baseBranch,\n      refBranch,\n      payload,\n      cmState.cmChanged,\n      cache.contextPerFile\n    );\n    saveResultsInCache({ contextPerFile, rules, admins, cmState });\n    const watchers = await getWatchers(rules, payload);\n\n    // Send evaluated rules to the resolver\n    const body = {\n      automations,\n      context: {\n        watchPREvents: watchers.events,\n        watchFilters: watchers.filters,\n        ...payload,\n        admins,\n        dryRun: cmState.isDryRun,\n        onlyRulesFilesChanges: cmState.cmChanged && !cmState.isDryRun,\n        ...attachAdditionalContextByProvider(payload.source, {\n          baseBranch,\n        }),\n      },\n    };\n    await sendResultsToResolver(body, payload, automations);\n  } catch (error) {\n    const { owner, repo, pullRequestNumber } = payload;\n    console.error(ERRORS.INTERNAL_ERROR, { error });\n    await prepareSendingLogsToDD(\n      'warn',\n      `${ERRORS.INTERNAL_ERROR} for pr ${owner}/${repo}/${pullRequestNumber}`,\n      payload,\n      {\n        error: error?.toString(),\n      }\n    );\n    await handleValidationErrors(\n      error?.toString(),\n      STATUS_CODES.INTERNAL_ERROR,\n      payload\n    );\n  }\n};\n","// @ts-nocheck\nimport { runCI } from './run-ci';\nimport {\n  executeOneRuleFile,\n  executeCached,\n  executeParser,\n} from './utils/ruleParser';\n\nconsole.log('Running gitstream-rules-engine 1.2.3');\n\nexport let isExecutePlayground = false;\n\nexport const RulesEngine = (isPlayground = false) => {\n  isExecutePlayground = isPlayground;\n  return {\n    run: runCI,\n    executeOneRuleFile,\n    executeCached,\n    executeParser,\n  };\n};\n"],"names":["AWS_BASE_URL","API_ENDPOINTS","REVIEW_TIME","EXPERT_REVIWER","PACKAGE_NAME","ERRORS","FAILED_RENDER_STRING","FAILED_YAML_LOAD","INVALID_CM","INVALID_CM_CONTEXT_VARIABLES","STATUS_CODES","argsDefinitionsByAction","comment","name","type","label","labels","reviewers","team_reviewers","wait_for_all_checks","rebase_on_merge","squash_on_merge","approvals","listify","internalIncludes","file","searchTerm","includes","internalRegex","multiline","startsWith","substring","slice","replace","re","RegExp","test","internalEvery","arr","value","bools","map","item","Boolean","length","every","element","formatInputToList","input","split","PROVIDER","GITHUB","GITLAB","BITBUCKET","PROVIDER_NAME","DOCS_LINK_COMMENT","MONTH","FiltersForAnalytics","handleAnalytics","filterName","filterArgs","filters","args","parseSome","list","GeneralFilters","some","formattedList","match","parseEvery","termRegexOrList","attribute","term","regex","search","filterList","files","isReject","filter","mapList","calculateList","callbackName","attr","formattedFiles","parseFilter","parseReject","reject","parseMap","parseIncludes","parseMatch","parseNope","parseIntersection","listA","intersection","listB","_","parseDifference","difference","GENERAL_FILTERS_HANDLER","nope","ADDITIONAL_FORMATTING","github","gitlab","calculateSumByAuthor","authorMetric","author","Object","values","reduce","aa","precent","totalPercent","convertAndSumContributors","contributors","gitToProviderUser","keys","acc","gitAuthor","score","convertContributorsAndBlame","repo","blame","git_to_provider_user","sumAuthorMetrics","numOfFiles","sumByAuthor","calculateActivityPerFile","activity","weeksArr","totalPerFile","ac","linesPerWeek","forEach","week","calculateFileSumPerAuthorActivity","totalsPerFile","calcPercent","acAuthor","arrSum","push","total","a","b","parseInt","toFixed","sortObject","data","object","sort","compareThan","gt","lt","authors","undefined","sortedAuthors","validateAndCompare","authorMetrics","convertBlameContextToExplain","formattedValues","accAuthor","formatGitAuthor","formattedValue","Math","floor","suggestedReviewersComment","authorFilteredParseResult","argsTemplate","numOfPRFiles","isNoUserButYou","formattedComment","explainBlameTemplate","formattedBlameContext","provider","parserResultTemplate","isGitUser","x","result","isGtLtArgsValid","getETR","request","axios","post","headers","numericValue","getExpertReviewer","filterExpertResult","filterBy","thresholdData","user","contributor","parseExpertReviewerThreshold","getAndFilterExpertReviewer","data_service","expert_reviwer_request","dataWithoutIssuer","isIssuerFiltered","pr_author","explainExpertReviewerComment","expertReviewers","activeUsers","knowledgeUsers","threshold","join","explainActivityByMonth","activityUsers","monthsComment","months","index","moment","subtract","format","month","user1Value","user2Value","additions","deletions","explainActivityTable","table","explainKnowledgeSection","knowledge","knowledgeText","explainActivityAndBlameComment","error","console","log","parseActivityByUserDataForExplain","date","formatedDate","parseActivityByUserForExplain","au","activityData","getExplainActivity","userActivity","getExplainKnowledge","userKnowledge","round","DELETED_PATH","estimatedReviewTime","branch","callback","HighLevelFilters","diff","files_metadata","additionalLines","deletedLines","prFiles","fileMetadata","file_path","new_file","original_file","reqBody","prMetadata","commits","num_of_commits","lines","prAdditionalLines","prDeletedLines","baseBranch","base","request_source","parseExpertReviewer","expertReviewer","parseExplainCodeExpertHandler","explainActivity","explain","explainKnowledge","explainComment","Array","from","Set","base64Comment","Buffer","toString","parseCodeExperts","codeExperts","parseExplainExpertReviewer","explainExpertReviewer","parseExplainCodeExperts","explainCodeExperts","PYTHON_COMMAND","minify","text","replaceAll","trim","removeEmptyLines","jsFormatter","content","prettier","semi","singleQuote","filepath","pyFormatter","blackResult","spawnSync","JSON","stringify","formattedCode","stdout","SUPPORTED_FORMATTERS","js","ts","html","py","fileExtension","pop","formatter","get","convertArgsToString","key","SONAR_REGEX","BUGS","VULNERABILITIES","SECURITY_HOTSPOTS","CODE_SMELL","DUPLICATIONS","COVERAGE","RATING","getSonarPropertyRating","str","rawRating","rating","lastIndexOf","indexOf","getSonarPropertyCount","row","isFloat","count","parseFloat","isNaN","parseSonarParser","pr","sonarParser","sonarObject","bugs","code_smells","vulnerabilities","security_hotspots","duplications","coverage","sonarComment","comments","commenter","sonarCommentArray","JIT_USER","parseJitReview","review","parsedReview","initEmptyJitObject","conversations","conversation","security_control","description","severity","_summary","summary","metrics","unifyReviews","parsedReviews","jitObject","mergeWith","extractJitCommentsFromPR","reviews","HIGH","MEDIUM","LOW","INFO","parseJitComments","extractJitFindings","jitComments","isEmpty","parseExtractSonarFindings","extractSonarFindings","parserMapToEnum","mapToEnum","enumArgs","parseFilterAllTests","extensions","filePath","parseFilterAllFilePath","searchArray","parseFilterAllExtensions","getUniqueExtensions","array","parseIsFormattingChange","isFormattingChange","allFormatting","new_content","original_content","formattedNew","formattedOld","e","parseMatchDiffLines","matchDiffLines","ignoreWhiteSpaces","diffLinesRegex","emptyLinesRegex","diffRow","flat","parseIsFirstCommit","isFirstCommit","parseRankByGitBlame","rankByGitBlame","blameByAuthor","comparedResult","parseRankByGitActivity","rankByGitActivity","weeks","fill","i","git_activity","fileSumPerAuthor","activityByAuthor","convertContributors","parseExplainRankByGitBlame","explainRankByGitBlame","parseResult","authorFilteredParseResultString","FILTERED_OUT_LIST","allDocs","FILTERS_EXTENSION_LIST","allImages","allTests","HIGH_LEVEL_FILTERS_HANDLER","excludedFile","jitFilter","ASYNC","parseIsEveryExtension","parseIsEveryExtensionRegex","parseExtractExtensions","parseIsStringIncludes","terms","parseIsStringIncludesRegex","parseRegex","parseIsEveryInListRegex","parseIsEveryInList","parseIsSomeInList","searchTerms","parseIncludesRegex","parseIsSomeInListRegex","parseFilterRegex","parseFilterListRegex","parseFilterList","allFormattingChange","parseFilterFileDiffRegex","filterRegex","parseIsEveryLineInFileDiffRegex","parseIsSomeLineInFileDiffRegex","Filters","FILTER_HANDLERS","filterListRegex","isEveryInListRegex","isSomeInList","isSomeInListRegex","isStringIncludes","isStringIncludesRegex","isEveryInList","extractExtensions","isEveryExtension","isEveryExtensionRegex","filterFileDiffRegex","isEveryLineInFileDiffRegex","isSomeLineInFileDiffRegex","allExtensions","allPassRegex","allPathIncludes","includesRegex","DefaultParserAttributes","Validators","RuleParser","ruleFileContent","context","debugMode","isDebug","env","nunjucks","__dirname","autoescape","allFilters","addFilter","ruleFileRawContent","ruleFile","render","renderedRuleFile","reRenders","currentContext","dataAsString","Promise","resolve","renderString","err","res","yaml","errors","validateRun","runs","run","newArgs","arg","argValue","combineMetadataWithRulesResult","resourceName","resource","rules","passed","pass","combineMetadataWithResult","lastParserResult","validatorErrors","automations","analytics","clearParserResults","attachAdditionalArgs","latestResults","cloneDeep","newAutomations","automation","action","validatorsConstants","SUPPORTED_ACTIONS","EXPLAIN_CODE_EXPERTS","validateCM","validators","FiltersValidator","ActionsValidator","FileStructureValidator","SavedWordsValidator","ContextVariableValidator","validator","validate","yamlFile","parseStreams","RULES_RESOLVER_URL","process","HEAD_REF","BASE_REF","CLIENT_PAYLOAD","RESOLVER_TOKEN","RULES_RESOLVER_TOKEN","DEBUG_MODE","USE_CACHE","SYNTAX_ERROR","RULE_FILE_NOT_FOUND","FAILED_TO_EXTRACT_ADMINS","SEND_RESULTS_TO_RESOLVER_FAILED","SEND_RESULTS_TO_RESOLVER_SUCCEEDED","FAILED_TO_GET_CONTEXT","FAILED_PARSE_CM_FILE","MISSING_KEYWORD","MALFORMED_EXPRESSION","FAILED_TO_PARSE_CM","FAILED_TO_GET_WATCHERS","GIT_COMMAND_FAILED","INTERNAL_ERROR","INVALID_CACHE","VALIDATOR_ERROR","FAILED_PARSE_RULES_PARSER_ERRORS","UNSUPPORTED_ACTION","UNSUPPORTED_ARGUMENT","MISSING_REQUIRED_FIELDS","BAD_REVISION","NOT_FOUND_FILE_PATH","IGNORE_PATTERNS_IN_DRY_RUN","GIT_PROVIDER","ORG_LEVEL_REPO","WATCH_PR_EVENTS","APPROVALS","CHECKS","DRAFT","DESCRIPTION","REVIEWERS","STATUS","TITLE","LABELS","WATCH_FILTERS","sendLogToDD","logData","parse","ddApiKey","ddtags","host","method","url","debug","message","prepareSendingLogsToDD","level","payload","extraData","shouldReport","owner","pullRequestNumber","triggeredBy","org","attachAdditionalContextByProvider","attachContextByProvider","performNonSoftCommands","getContextCb","additionalContext","ACTIVITY_SINCE","gitCommands","GIT_BLAME","GIT_LOG","GIT_BLAME_AUTHORS_FORMAT","GIT_BLAME_STRING","COMMITER_PER_FILE","COMMITS_DATE_BY_AUTHOR","GIT_ACTIVITY","since","AUTHORS_COUNT","REPO_FILES_COUNT","FIRST_COMMIT","GIT_ERRORS","GETTING_ALL_AUTHORS","GETTING_AUTHOR_LINES","GETTING_GIT_BLAME","GIT_INFO","RAW_GIT_COMMANDS","NO_DATA_FROM_GIT","REPO_FOLDER","DEFAULT","CM","GIT_ERROR_TYPE","MAIN_RULES_FILE","groupByWeek","weekSum","cur","find","git_user","changes","accSum","calculateLinesPercentage","authorLines","allLinesCount","formatDateToDays","headBranch","today","Date","formattedDate","abs","reportGitCommandsAndResults","gitBlameCommand","gitActivityCommand","gitLogCommand","gitBlame","executeGitCommand","gitActivity","gitLog","getAllAuthorsOfFile","gitCommand","rawAuthors","getAuthorLines","allAuthors","authorFormatted","getGitBlameString","calculateStatisticsForBlame","getCodeLinesCount","readRemoteFileAndSplit","readRemoteFile","isLastRowEmpty","allRows","splitDsAndBlameObjects","blames","formattedBlame","dsBlame","splitDsAndActivity","formattedActivity","dsActivity","commitsDateByAuthor","branchName","buildTempActivity","raw","authorData","weekChanges","dateObject","momentDate","weekNum","recentAuthorActivity","rawList","getRepoFirstCommitDate","allAuthorsString","prevAuthor","matchByEmail","contributorEmail","providerUserLogin","providerUserName","email","matchByName","contributorFullName","formattedProviderName","toLowerCase","formattedGitName","formatProviderContributors","providerContributors","login","formatGitContributors","gitContributors","contributorMap","lastName","fullName","reversedName","contributions","getUserMappingFromConfig","userMapping","config","user_mapping","authorObject","matchContributorsFromProviderData","providerContributorsFormatted","gitContributorsFormatted","matchContributionsList","unmachedContributors","fallback1","mergeResults","configContributors","matchedProviderContributors","authorKey","matchContributors","rulesObj","matchContributorsFromProvider","userMappingFromConfig","rulesEngineErrors","callWebhookOnError","gitlabCustomWebhookToken","webhook_url","body","status","webhookEvent","event_type","handleErrorByProvider","details","core","decodedMessage","handleValidationErrors","statusCode","fullMessage","isExecutePlayground","clientPayload","source","getErrorHandlerCb","exit","fromBase64String","base64string","toBase64String","string","convertRuleFileToStringSafe","replacers","toReplace","convertPRContextFromBase64","prContext","general_comments","generalComment","line_comments","lineComments","findGitAuthorsWithFallback","fullGitName","authorResult","prevResults","gitNames","gitUser","authorDates","filteredOutCMFilesFunc","to","ignorePattern","formatFilesToSourceFiles","refBranch","chunks","getContent","getCheckoutCommit","extractMetadataFromFiles","getDiffSize","parseCMFile","contributersStatContext","age","author_age","ds_blame","contributersActivityContext","ds_activity","filterOutFiles","isCmChanged","diffCommand","getTheRightGitAuthor","fallbacks","gitName","gitEmail","getContext","getDiff","commitsNumber","getCommitsNumberOnBranch","getContributorsStatistics","getAuthorName","fullAuthorName","authorName","authorEmail","autor_name","author_email","size","contributorsMap","author_name","contributorsStats","contributorsActivity","reducedContext","SOURCE_CODE_WORKING_DIRECTORY","CWD","cwd","command","folder","cdCommand","gitResult","execSync","maxBuffer","checkoutCommit","fileContent","ignoreFiles","ignore_files","logs","currBranch","readFileSync","getCMFilesList","cmFiles","getExcludedOrgCMFilesBasedOnRepo","orgRules","excludedRulesFiles","excludedRepos","ignore_repositories","getOrgCmFiles","orgCmFiles","cmFile","getRuleFiles","ruleFiles","Number","contributorsString","contributorStats","hasNonRuleFilesChanges","saveResultsInCache","results","writeFileSync","loadCacheResults","cacheResults","warn","ExpertReviewerContext","ExpertReviewerRequest","gitToProvider","merge_dict","pr_files","buildPrFiles","tempPrFiles","FILTER_EVENT_TYPE","AmplitudeEvent","hasCmRepo","user_id","pr_url","generatePrUrl","event_properties","filter_name","client","initAmplitude","analyticsHttpApiUrl","analyticsKey","Amplitude","serverUrl","sendAmplitudeEvent","event","ampEvent","logEvent","SegmentEvent","trigger_id","is_org_level","userId","properties","git_org_name","git_provider","sendSegmentEvent","segment","SegmentClient","segmentServiceUrl","segment_write_key","segmentWriteKey","segmentEvent","track","Error","filterAnalyticsHandler","COMMENT_REGEX","EMPTY_LINE_REGEX","ACTIONS_LINE_REGEX","ACTIONS_PREFIX_REGEX","AUTOMATION_KEYWORD","MALFORMED_EXPRESSION_REGEX","validateKeyword","validateActions","actions","supportedActions","SUPPORTED_ACTIONS_BY_PROVIDER","notSupportedActions","validateExpressions","validateRequiredArgs","existingArgs","requiredArgsExists","requireArg","REQUIRED_ARGUMENTS_BY_ACTIONS","missingArgs","all","validateSupportedArgs","unsupportedArgs","SUPPORTED_ARGUMENTS_BY_ACTION","validateArgs","flatMap","validateSavedWords","validateRuleFile","rulesWithoutComments","parseRules","parser","passedAutomationNames","totalAutomations","passedAutomations","removeDSObjects","executeOneRuleFile","cloneRepoPath","tempContext","expertRequest","stringSafeRuleFile","executeCached","cachedContext","parseRulesParserErrors","parserErrors","cmContent","parseMultipleRuleFiles","cache","combinedResults","contextPerRuleFile","breakGitstream","ruleFileName","isOrgLevel","provider_repository_id","cmRepoId","providerRepoId","contextPerFile","extractAdmins","isCmRepoFullyInstalled","cmRepoRef","repoCmFile","admins","admin","users","OrgLevelRules","orgRulesObj","concat","adminArray","getCMChanged","cmChanged","isDryRun","getRules","orgRulesToExclude","getRulesAndValidate","getPREventsInRuleFile","getFiltersInRuleFile","getWatchers","watchers","events","executeParser","validateDefaultFolder","calculateRunData","cmState","loadRunData","sendResultsToResolver","parserResults","runCI","headSha","watchPREvents","watchFilters","dryRun","onlyRulesFilesChanges","RulesEngine","isPlayground"],"mappings":"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"}