{"version":3,"file":"linode-logger.cjs.production.min.js","sources":["../src/utils.ts","../src/middlewares.ts","../src/index.ts"],"sourcesContent":["import { URL } from 'url';\n\nexport const FIELDS_TO_OMIT = [\n  'authorization',\n  'token',\n  'password',\n  'code',\n  'pass',\n  'key',\n  'access_token',\n  'access_token_secret',\n  'refresh_token',\n  'accessToken',\n  'refreshToken',\n  'cookie'\n];\n\nexport const StringifyReplacer = (circular = true, omitFields = true) => {\n  const seen = new WeakSet(); //week reference for quick gc\n  return (key, value) => {\n    if (circular && typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        console.error(`Circular Object key detected: ${key}`);\n        return '#CircularRefParentObject';\n      }\n      seen.add(value);\n    }\n    if (omitFields && FIELDS_TO_OMIT.includes(key) && typeof value === 'string')\n      return value.substring(0, 3) + '*****' + value.slice(-1);\n\n    return value;\n  };\n};\n\nexport const SafeStringifyReplacer = (\n  obj: any,\n  omit?: boolean | undefined,\n  space?: string | number | undefined\n): string => {\n  try {\n    return JSON.stringify(obj, StringifyReplacer(false, omit), space);\n  } catch (e) {\n    return JSON.stringify(obj, StringifyReplacer(true, omit), space);\n  }\n};\n\nexport const parseURL = (url: string) => {\n  try {\n    let parsedUrl = new URL(url);\n    let dict = {};\n    parsedUrl.searchParams.forEach((value, key) => {\n      if (dict[key]) {\n        dict[key].push(value);\n      } else {\n        dict[key] = [value];\n      }\n    });\n    // reassign query as old url.parse\n    parsedUrl['query'] = dict;\n    return parsedUrl;\n  } catch (e) {\n    return {};\n  }\n};\n","import morgan from 'morgan';\nimport _ from 'lodash';\nimport httpContext from 'express-http-context';\nimport { v4 } from 'uuid';\nimport { FIELDS_TO_OMIT } from './utils';\n\n/**\n each request will have all of the context\n */\nexport function contextifyRequestMiddleware(req, res, next) {\n  const accountId = _.get(req, 'headers.id', '').toString();\n  const organizationId = _.get(req, 'headers.organization_id', '').toString();\n  const headerRequestId = _.get(req, 'headers.x-request-id', null);\n  const headerSourceRequestId = _.get(req, 'headers.source-x-request-id', null);\n  const queryRequestId = _.get(req, 'query.x-request-id', null);\n  const querySourceRequestId = _.get(req, 'query.source-x-request-id', null);\n  const requestId = headerRequestId || queryRequestId || v4();\n  const sourceRequestId = headerSourceRequestId || querySourceRequestId;\n  const amznTraceId = _.get(req, 'headers.x-amzn-trace-id', null);\n\n  if (!headerRequestId) {\n    req.headers['x-request-id'] = requestId;\n  }\n\n  if (sourceRequestId) {\n    httpContext.set('sourceRequestId', sourceRequestId);\n  }\n\n  httpContext.set('headers', _.omit(req.headers, FIELDS_TO_OMIT));\n  httpContext.set('body', req.body);\n  httpContext.set('params', req.params);\n  httpContext.set('query', req.query);\n  httpContext.set('originalUrl', req.originalUrl);\n  httpContext.set('method', req.method);\n  httpContext.set('amznTraceId', amznTraceId);\n  httpContext.set('requestId', requestId);\n  httpContext.set('accountId', accountId);\n  httpContext.set('organizationId', organizationId);\n\n  next();\n}\n\nexport function expressLogger(logger, consoleLevel) {\n  return morgan(\n    function (tokens, req, res) {\n      const amznTraceId = httpContext.get('amznTraceId');\n      const logInfo = {\n        method: tokens.method(req, res),\n        status: Number(tokens.status(req, res)),\n        url: tokens.url(req, res),\n        headers: httpContext.get('headers'),\n        'response-time': `${tokens['response-time'](req, res)} ms`,\n        'x-request-id': httpContext.get('requestId'),\n        body: httpContext.get('body'),\n        query: httpContext.get('query'),\n        ...(amznTraceId ? { [`x-amzn-trace-id`]: amznTraceId } : {})\n      };\n      const noQsUrl = (logInfo.url || '').split('?')[0];\n      logInfo.status < 400\n        ? logger.debug('', logInfo)\n        : logger.error(`[Extended log]: ${logInfo.status} ${logInfo.method} ${noQsUrl}`, logInfo);\n    },\n    {\n      stream: {\n        //dont use write stream as we return null from the above custom formatter, and output msg from it\n        write: function (msg) {}\n      },\n      skip: function (req, res) {\n        return res.statusCode > 199 && res.statusCode < 400 && consoleLevel !== 'debug';\n      }\n    }\n  );\n}\n","import { transports, format, createLogger as wCreateLogger } from 'winston';\nimport httpContext from 'express-http-context';\nimport _ from 'lodash';\nimport { expressLogger, contextifyRequestMiddleware } from './middlewares';\nimport { SafeStringifyReplacer, parseURL } from './utils';\nconst { combine, timestamp, printf, colorize } = format;\n\nconst DEFAULT_OPTIONS = {\n  consoleLevel: 'debug'\n};\n\nconst jsonFormat = printf(({ level, timestamp, message = '', ...ctx }) =>\n  SafeStringifyReplacer({ timestamp, level, message, ctx }, true)\n);\n\nconst localFormat = printf(\n  ({ level, timestamp, message = '', error, ...ctx }) =>\n    `${timestamp} [${level}]: ${SafeStringifyReplacer({ message, ctx }, false)}\\n` +\n    `${error ? SafeStringifyReplacer(error, false, 2) : ''}`\n);\n\nconst getOptions = (options = {}) => {\n  return Object.assign({}, DEFAULT_OPTIONS, process.env, options) as any;\n};\n\nfunction addContext(key, value) {\n  httpContext.set('extendedContext', {\n    ...(httpContext.get('extendedContext') || {}),\n    [key]: value\n  });\n}\n\nexport function createLogger(options) {\n  const { GIT_COMMIT_SHORT, app, environment, consoleLevel } = getOptions(options);\n\n  const _transports = [\n    new transports.Console({\n      level: consoleLevel,\n      handleExceptions: true\n    })\n  ];\n\n  const logger = wCreateLogger({\n    transports: _transports,\n    exitOnError: false,\n    format: environment.includes('local')\n      ? combine(timestamp(), colorize(), localFormat)\n      : combine(timestamp(), jsonFormat),\n\n    defaultMeta: {\n      app,\n      environment,\n      ...(GIT_COMMIT_SHORT ? { commit_sha: GIT_COMMIT_SHORT } : {})\n    }\n  });\n\n  // adding default context for every log\n  const contextifyLogFn = logFn => (message, ctx) => {\n    const source_request_id = httpContext.get('sourceRequestId');\n    const request_id = httpContext.get('requestId');\n    const account_id = httpContext.get('accountId');\n    const org_id = httpContext.get('organizationId');\n    const extendedContext = httpContext.get('extendedContext') || {};\n\n    return logFn({\n      message,\n      ...ctx,\n      environment,\n      app,\n      'x-request-id': request_id,\n      ...(source_request_id ? { source_request_id } : {}),\n      ...(account_id ? { account_id } : {}),\n      ...(org_id ? { org_id } : {}),\n      ...extendedContext\n    });\n  };\n\n  return {\n    level: consoleLevel,\n    embed(expressApp) {\n      expressApp.use(httpContext.middleware);\n      expressApp.use(contextifyRequestMiddleware);\n      expressApp.use(expressLogger(logger, consoleLevel));\n    },\n    debug(msg: string, ctx = {}) {\n      contextifyLogFn(logger.debug)(msg, ctx);\n    },\n    verbose(msg: string, ctx = {}) {\n      contextifyLogFn(logger.verbose)(msg, ctx);\n    },\n    info(msg: string, ctx = {}) {\n      contextifyLogFn(logger.info)(msg, ctx);\n    },\n    warn(msg: string, ctx = {}) {\n      contextifyLogFn(logger.warn)(msg, ctx);\n    },\n    error(msg: string, error = {}) {\n      let ctxError = { ...error };\n      if (error['isAxiosError']) {\n        let parsed_url = parseURL(_.get(error, 'config.url', ''));\n        let queryParams = Object.assign(\n          _.get(parsed_url, 'query', {}),\n          _.get(error, 'config.params', {})\n        );\n        ctxError['httpClientResponseQueryParams'] = SafeStringifyReplacer(queryParams, true);\n        ctxError['httpClientResponseURL'] =\n          _.get(error, 'config.baseURL', '') + _.get(parsed_url, 'pathname', '');\n        ctxError['httpClientResponseMethod'] = _.get(error, 'config.method', null);\n        ctxError['httpClientResponseStatusCode'] = _.get(error, 'response.status', null);\n        ctxError['httpClientResponseMessage'] = _.get(error, 'response.data.message', null);\n      }\n      const request = {\n        headers: httpContext.get('headers'),\n        body: httpContext.get('body'),\n        params: httpContext.get('params'),\n        query: httpContext.get('query'),\n        originalUrl: httpContext.get('originalUrl'),\n        method: httpContext.get('method')\n      };\n      contextifyLogFn(logger.error)(msg, { ctxError, request });\n    },\n    addContext\n  };\n}\n\nexport * from './utils';\n"],"names":["FIELDS_TO_OMIT","StringifyReplacer","circular","omitFields","seen","WeakSet","key","value","has","console","error","add","includes","substring","slice","SafeStringifyReplacer","obj","omit","space","JSON","stringify","e","parseURL","url","parsedUrl","URL","dict","searchParams","forEach","push","contextifyRequestMiddleware","req","res","next","accountId","_","get","toString","organizationId","headerRequestId","headerSourceRequestId","queryRequestId","querySourceRequestId","requestId","v4","sourceRequestId","amznTraceId","headers","httpContext","set","body","params","query","originalUrl","method","combine","format","timestamp","printf","colorize","DEFAULT_OPTIONS","consoleLevel","jsonFormat","level","_ref$message","message","ctx","localFormat","_ref2$message","addContext","options","Object","assign","process","env","getOptions","GIT_COMMIT_SHORT","app","environment","_transports","transports","Console","handleExceptions","logger","wCreateLogger","exitOnError","defaultMeta","commit_sha","contextifyLogFn","logFn","source_request_id","request_id","account_id","org_id","extendedContext","x-request-id","embed","expressApp","use","middleware","morgan","tokens","logInfo","status","Number","response-time","noQsUrl","split","debug","stream","write","msg","skip","statusCode","expressLogger","verbose","info","warn","ctxError","parsed_url","queryParams","request"],"mappings":"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"}